//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun  9 2020 17:35:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKGestureRecognizerDelegate-Protocol.h"
#import "BKIOHIDServiceDisappearanceObserver-Protocol.h"
#import "BKIOHIDServiceMatchObserver-Protocol.h"

@class BKHIDEventRouterManager, BKIOHIDServiceMatcher, BKKeyboardInfo, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface BKKeyboardHIDEventProcessor : NSObject <BKGestureRecognizerDelegate, BKIOHIDServiceMatchObserver, BKIOHIDServiceDisappearanceObserver>
{
    NSMutableArray *_allKeyboards;
    NSMutableArray *_usableKeyboards;
    NSMutableArray *_gestureRecognizers;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_keyboardLayout;
    long long _countOfKeyboardsRequiringAllSmartCoverHESDisengagedForOpen;
    _Bool _systemAppConsumesAllKeyboardEvents;
    BKIOHIDServiceMatcher *_keyboardServiceMatcher;
    BKHIDEventRouterManager *_eventRouterManager;
    BKKeyboardInfo *_primaryKeyboardInfo;
}

@property(nonatomic) _Bool systemAppConsumesAllKeyboardEvents; // @synthesize systemAppConsumesAllKeyboardEvents=_systemAppConsumesAllKeyboardEvents;
@property(retain, nonatomic) BKKeyboardInfo *primaryKeyboardInfo; // @synthesize primaryKeyboardInfo=_primaryKeyboardInfo;
@property(retain, nonatomic) BKHIDEventRouterManager *eventRouterManager; // @synthesize eventRouterManager=_eventRouterManager;
@property(retain, nonatomic) BKIOHIDServiceMatcher *keyboardServiceMatcher; // @synthesize keyboardServiceMatcher=_keyboardServiceMatcher;
- (void).cxx_destruct;
- (void)serviceDidDisappear:(id)arg1;
- (void)matcher:(id)arg1 servicesDidMatch:(id)arg2;
- (void)gestureRecognizer:(id)arg1 didChangeState:(long long)arg2;
- (void)_queue_stopWatchingForGestures:(id)arg1;
- (void)_queue_watchForGestures:(id)arg1;
- (void)_queue_handleKeyEvent:(struct __IOHIDEvent *)arg1 buttonEvent:(id)arg2 fromSender:(id)arg3;
- (void)_queue_handleUnicodeEvent:(struct __IOHIDEvent *)arg1 fromSender:(id)arg2;
- (id)_queue_destinationsForEvent:(struct __IOHIDEvent *)arg1 keyboard:(id)arg2 isUnicodeEvent:(_Bool)arg3 displayUUID:(id)arg4;
- (void)_queue_usableKeyboardDetached:(id)arg1;
- (void)_queue_usableKeyboardAttached:(id)arg1;
- (void)_queue_setPrimaryKeyboard:(id)arg1;
- (void)_queue_keyboardRemoved:(id)arg1;
- (void)_queue_keyboardsDetected:(id)arg1;
- (void)_queue_setKeyboardLightsSuspended:(_Bool)arg1;
- (id)_queue_keyboardInfoForSenderID:(unsigned long long)arg1;
@property(readonly) _Bool capsLockKeyHasLanguageSwitchLabel;
@property(getter=isCapsLockLightOn) _Bool capsLockLightOn;
- (void)setRomanCapsLockSwitchModeActive:(_Bool)arg1;
- (id)primaryHardwareKeyboardLanguage;
@property(retain) NSString *keyboardLayout;
- (void)setKeyboardLightsSupended:(_Bool)arg1;
- (void)handleKeyboardEvent:(struct __IOHIDEvent *)arg1 buttonEvent:(id)arg2 fromSender:(id)arg3;
- (void)handleUnicodeEvent:(struct __IOHIDEvent *)arg1 fromSender:(id)arg2;
@property(readonly, copy) NSString *debugDescription;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

