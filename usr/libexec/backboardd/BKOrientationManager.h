//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun  9 2020 17:35:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKIOHIDServiceDisappearanceObserver-Protocol.h"
#import "BKIOHIDServiceMatchObserver-Protocol.h"

@class BKIOHIDService, BKIOHIDServiceMatcher, CMDeviceOrientationManager, NSHashTable, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface BKOrientationManager : NSObject <BKIOHIDServiceMatchObserver, BKIOHIDServiceDisappearanceObserver>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_observerCalloutQueue;
    NSHashTable *_queue_observers;
    double _queue_updateInterval;
    float _queue_interruptEventThresholds;
    _Bool _queue_isOrientationEventsEnabled;
    long long _queue_lastUnambiguousRawAccelerometerDeviceOrientation;
    long long _queue_currentUserInterfaceOrientation;
    long long _queue_currentRawAccelerometerDeviceOrientation;
    long long _queue_lastEffectiveInterfaceOrientation;
    long long _queue_effectiveDeviceOrientation;
    unsigned long long _queue_orientationLocksEnabled;
    _Bool _queue_ignoreAccelerometerAndOrientationEventsForTesting;
    NSOperationQueue *_queue_orientationManagerOperationQueue;
    CMDeviceOrientationManager *_queue_orientationManager;
    BKIOHIDService *_queue_HIDService;
    BKIOHIDServiceMatcher *_queue_HIDServiceMatcher;
    NSObject<OS_dispatch_queue> *_notifyQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic, getter=_queue_HIDService, setter=_queue_setHIDService:) BKIOHIDService *queue_HIDService; // @synthesize queue_HIDService=_queue_HIDService;
- (void).cxx_destruct;
- (void)_queue_postDeviceOrientationLockChangedNotification:(_Bool)arg1;
- (void)_queue_postUpdatedLastUnambiguousDeviceOrientation:(long long)arg1;
- (void)_queue_postUpdatedRawAccelerometerDeviceOrientation:(long long)arg1;
- (void)_queue_postUpdatedOrientation:(long long)arg1;
- (void)_queue_unlockDeviceOrientationForType:(unsigned long long)arg1;
- (_Bool)_queue_isDeviceLockedForAtLeastOneType:(unsigned long long)arg1;
- (_Bool)_queue_isDeviceLockedForAllTypes:(unsigned long long)arg1;
- (void)_queue_lockDeviceOrientation:(unsigned long long)arg1 deviceOrientation:(long long)arg2;
- (void)_queue_postDeviceOrientationLockChangedNotification;
- (void)_queue_noteEffectiveOrRawDeviceOrientationDidChange:(long long)arg1;
- (void)_queue_updateDeviceOrientation:(long long)arg1;
- (void)_queue_updateDeviceOrientationFromCoreMotion:(id)arg1;
- (void)_queue_updateDeviceOrientationWithTemporaryManager;
- (void)_queue_updateDeviceOrientationSynchronously;
- (void)_queue_setLastUnambiguousDeviceOrientation:(long long)arg1;
- (void)_queue_setCurrentRawAccelerometerDeviceOrientation:(long long)arg1;
- (void)_queue_setEffectiveDeviceOrientation:(long long)arg1 affectingLastEffectiveInterfaceOrientation:(_Bool)arg2;
- (void)_queue_setCurrentUserInterfaceOrientation:(long long)arg1;
- (void)_queue_resetDeviceOrientation;
- (void)_queue_setOrientationEventsEnabled:(_Bool)arg1;
- (_Bool)_queue_isOrientationLocked;
- (void)_queue_setUpdateInterval:(double)arg1;
- (void)_queue_setInterruptEventThresholds:(float)arg1;
- (void)_systemAppDidExit:(id)arg1;
- (void)_systemAppDidCheckin:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)refreshEffectiveDeviceOrientation;
- (void)updateDeviceOrientation:(long long)arg1;
- (void)unlockDeviceOrientation:(unsigned long long)arg1;
- (void)lockDeviceOrientation:(unsigned long long)arg1 deviceOrientation:(long long)arg2;
- (_Bool)isDeviceOrientationLockedForType:(unsigned long long)arg1;
- (_Bool)isDeviceOrientationLocked:(long long *)arg1;
- (_Bool)isDeviceOrientationLocked;
@property(readonly, nonatomic) long long effectiveDeviceOrientation;
@property(readonly, nonatomic) long long currentRawAccelerometerDeviceOrientation;
@property(readonly, nonatomic) long long lastEffectiveInterfaceOrientation;
@property(nonatomic) long long currentUserInterfaceOrientation;
@property(nonatomic, getter=isOrientationEventsEnabled) _Bool orientationEventsEnabled;
@property(nonatomic) double updateInterval;
@property(nonatomic) float interruptEventThresholds;
- (void)serviceDidDisappear:(id)arg1;
- (void)matcher:(id)arg1 servicesDidMatch:(id)arg2;
- (void)dealloc;
- (id)_initWithDeviceOrientationManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

