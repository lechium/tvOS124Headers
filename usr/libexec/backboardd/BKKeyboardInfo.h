//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun  9 2020 17:35:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class BKIOHIDService, BKSHIDEventDescriptor, BSMutableIntegerMap, NSString;

@interface BKKeyboardInfo : NSObject
{
    _Bool _swallowEvents;
    _Bool _capsLockOn;
    _Bool _capsLockRomanSwitchMode;
    _Bool _capsLockKeyHasLanguageSwitchLabel;
    unsigned char _countryCode;
    _Bool _shouldActivateByGesture;
    unsigned int _keyboardType;
    BKIOHIDService *_service;
    NSString *_keyboardLayout;
    NSString *_keyboardLanguage;
    struct __GSKeyboard *__gsKeyboard;
    BKSHIDEventDescriptor *_keyboardActivationEventDescriptor;
    BSMutableIntegerMap *_keyCodeDownPerDestination;
}

+ (id)keyboardInfoWithIOHIDService:(id)arg1;
@property(retain, nonatomic) BSMutableIntegerMap *keyCodeDownPerDestination; // @synthesize keyCodeDownPerDestination=_keyCodeDownPerDestination;
@property(retain, nonatomic) BKSHIDEventDescriptor *keyboardActivationEventDescriptor; // @synthesize keyboardActivationEventDescriptor=_keyboardActivationEventDescriptor;
@property(readonly, nonatomic) _Bool shouldActivateByGesture; // @synthesize shouldActivateByGesture=_shouldActivateByGesture;
@property(readonly, nonatomic) struct __GSKeyboard *_gsKeyboard; // @synthesize _gsKeyboard=__gsKeyboard;
@property(copy, nonatomic) NSString *keyboardLanguage; // @synthesize keyboardLanguage=_keyboardLanguage;
@property(copy, nonatomic) NSString *keyboardLayout; // @synthesize keyboardLayout=_keyboardLayout;
@property(nonatomic) unsigned int keyboardType; // @synthesize keyboardType=_keyboardType;
@property(nonatomic) unsigned char countryCode; // @synthesize countryCode=_countryCode;
@property(readonly, nonatomic) _Bool capsLockKeyHasLanguageSwitchLabel; // @synthesize capsLockKeyHasLanguageSwitchLabel=_capsLockKeyHasLanguageSwitchLabel;
@property(nonatomic) _Bool capsLockRomanSwitchMode; // @synthesize capsLockRomanSwitchMode=_capsLockRomanSwitchMode;
@property(nonatomic, getter=isCapsLockOn) _Bool capsLockOn; // @synthesize capsLockOn=_capsLockOn;
@property(nonatomic, getter=shouldSwallowEvents) _Bool swallowEvents; // @synthesize swallowEvents=_swallowEvents;
@property(retain, nonatomic) BKIOHIDService *service; // @synthesize service=_service;
- (void).cxx_destruct;
- (void)setCapsLockLEDOn:(_Bool)arg1;
- (void)setExternalKeyboardEventSource;
@property(readonly, nonatomic) BKSHIDEventDescriptor *keyboardActivationChangeEventDescriptor;
@property(readonly, nonatomic, getter=isKeyboardActive) _Bool keyboardActive;
- (void)removeDestinationsForKeyCode:(long long)arg1;
- (void)addDestination:(id)arg1 forDownKeyCode:(long long)arg2;
- (void)setDestinations:(id)arg1 forDownKeyCode:(long long)arg2;
- (id)destinationsForDownKeyCode:(long long)arg1;
@property(readonly, nonatomic) unsigned long long keyDownCount;
- (id)description;
- (void)dealloc;
- (id)initWithService:(id)arg1;

@end

