//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "GKService.h"

#import "GKTurnBasedService-Protocol.h"

@class NSString;

@interface GKTurnBasedService : GKService <GKTurnBasedService>
{
}

+ (unsigned long long)requiredEntitlements;	// IMP=0x0000000100174268
+ (Class)interfaceClass;	// IMP=0x0000000100174254
- (void)saveRecord:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100182100
- (id)privateDatabase;	// IMP=0x00000001001820cc
- (oneway void)reserveShareParticipantSlots:(long long)arg1 minPlayerCount:(long long)arg2 maxPlayerCount:(long long)arg3 andInvitePlayers:(id)arg4 withMessage:(id)arg5 forMatch:(id)arg6 handler:(CDUnknownBlockType)arg7;	// IMP=0x0000000100181b3c
- (void)setupShareWithRecordID:(id)arg1 rootRecord:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010018183c
- (oneway void)loadURLWithTBGMatch:(id)arg1 player:(id)arg2 matchRequest:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001811ec
- (oneway void)sendReminderToParticipants:(id)arg1 message:(id)arg2 match:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100180efc
- (oneway void)getNextTurnBasedEventWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100180a68
- (oneway void)replyToExchange:(id)arg1 withMessage:(id)arg2 data:(id)arg3 match:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100180924
- (oneway void)cancelExchange:(id)arg1 withMessage:(id)arg2 match:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100180818
- (oneway void)sendRequest:(id)arg1 forBagKey:(id)arg2 exchange:(id)arg3 matchID:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100180078
- (oneway void)sendExchangeToParticipants:(id)arg1 data:(id)arg2 message:(id)arg3 timeout:(double)arg4 match:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x000000010017f768
- (oneway void)completeTurnBasedMatch:(id)arg1 scores:(id)arg2 achievements:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000010017e948
- (id)_requestForTurnBasedSubmitValues:(id)arg1 withServerLabel:(id)arg2 sessionID:(id)arg3;	// IMP=0x000000010017e6b4
- (oneway void)resignFromTurnBasedGame:(id)arg1 outcome:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010017de60
- (oneway void)saveDataForTurnBasedMatch:(id)arg1 resolvedExchangeIDs:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010017d5d0
- (oneway void)submitTurnForTurnBasedMatch:(id)arg1 nextParticipantIndexes:(id)arg2 turnTimeout:(double)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000010017cb68
- (oneway void)removeTurnBasedMatch:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010017c4c8
- (oneway void)declineInviteForTurnBasedMatch:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010017bb28
- (oneway void)acceptInviteForTurnBasedMatch:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010017ae50
- (oneway void)getDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010017ae3c
- (oneway void)getDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(_Bool)arg2 prefetchOnly:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000010017a5b0
- (void)loadDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(_Bool)arg2 context:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100179e80
- (void)fetchDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(_Bool)arg2 responseKind:(int)arg3 context:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x000000010017956c
- (void)_updatePlayersForMatches:(id)arg1 group:(id)arg2;	// IMP=0x0000000100178f90
- (oneway void)getTurnBasedMatchesAndCompatibleBundleID:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100177dac
- (void)fetchTurnBasedMatchesForGame:(id)arg1 context:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100177858
- (void)loadTurnBasedMatchesForGame:(id)arg1 loadDetails:(_Bool)arg2 prefetchOnly:(_Bool)arg3 context:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100176e84
- (void)_determineTurnBasedBadgeCountFromList:(id)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100176a38
- (void)_determineCompatibleBundleIDForAppID:(id)arg1 appVersion:(id)arg2 shortBundleVersion:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100176134
- (void)_determineCompatibleGamesForMatches:(id)arg1 dispatchGroup:(id)arg2;	// IMP=0x000000010017543c
- (void)_updateGamesForTurnBasedMatches:(id)arg1 dispatchGroup:(id)arg2;	// IMP=0x0000000100175170
- (oneway void)createTurnBasedGameForMatchRequest:(id)arg1 individualMessages:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100174448
- (id)turnsForParticipantIndexes:(id)arg1 turnTimeout:(double)arg2;	// IMP=0x0000000100174284
- (void)getTurnBasedMatchesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100174270

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

