//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NDApplicationObserver-Protocol.h"
#import "NDBackgroundSessionProtocol-Protocol.h"
#import "NDCallbackQueueDelegate-Protocol.h"
#import "NDCredentialStorageDelegate-Protocol.h"
#import "NSURLSessionDataDelegate_Internal-Protocol.h"
#import "NSURLSessionDelegateOptions_Internal-Protocol.h"
#import "NSURLSessionDelegate_Internal-Protocol.h"
#import "NSURLSessionDownloadDelegate-Protocol.h"
#import "NSURLSessionDownloadDelegate_Private-Protocol.h"
#import "NSURLSessionTaskDelegatePrivate-Protocol.h"

@class NDApplication, NDCallbackQueue, NDCredentialStorage, NSMutableArray, NSMutableDictionary, NSString, NSURL, NSURLSession, NSXPCConnection;
@protocol NDBackgroundSessionDelegate, NSXPCProxyCreating><NDBackgroundSessionClient, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface NDBackgroundSession : NSObject <NDApplicationObserver, NDBackgroundSessionProtocol, NDCallbackQueueDelegate, NSURLSessionDataDelegate_Internal, NSURLSessionDownloadDelegate, NSURLSessionTaskDelegatePrivate, NSURLSessionDownloadDelegate_Private, NSURLSessionDelegate_Internal, NDCredentialStorageDelegate, NSURLSessionDelegateOptions_Internal>
{
    NSURLSession *_userInitiatedSession;	// 8 = 0x8
    NSURLSession *_discretionaryPrioritySession;	// 16 = 0x10
    NDCredentialStorage *_credentialStorage;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_archiveQueue;	// 32 = 0x20
    NDApplication *_clientApplication;	// 40 = 0x28
    NDApplication *_connectedExtension;	// 48 = 0x30
    NSMutableDictionary *_tasksToIdentifiers;	// 56 = 0x38
    NSMutableDictionary *_identifiersToTasks;	// 64 = 0x40
    NSMutableDictionary *_identifiersToMonitors;	// 72 = 0x48
    NSMutableDictionary *_identifiersToStreams;	// 80 = 0x50
    NSMutableDictionary *_identifiersToStreamQueues;	// 88 = 0x58
    NSMutableArray *_outstandingTaskIDs;	// 96 = 0x60
    double _lastArchiveTime;	// 104 = 0x68
    NSURL *_sessionDirectory;	// 112 = 0x70
    NSURL *_downloadDirectory;	// 120 = 0x78
    NSURL *_uploadsDirectory;	// 128 = 0x80
    _Bool _performsEVCertCheck;	// 136 = 0x88
    _Bool _clientImplementsWillSendRequest;	// 137 = 0x89
    _Bool _clientImplementsWillBeginDelayedRequest;	// 138 = 0x8a
    _Bool _clientImplementsSessionChallenge;	// 139 = 0x8b
    _Bool _clientImplementsTaskChallenge;	// 140 = 0x8c
    _Bool _clientImplementsCollectingMetrics;	// 141 = 0x8d
    _Bool _sendsLaunchEvents;	// 142 = 0x8e
    _Bool _discretionary;	// 143 = 0x8f
    _Bool _obliterated;	// 144 = 0x90
    _Bool _cleanedUp;	// 145 = 0x91
    _Bool _hasBeenSignalledToDeliverPendingEvents;	// 146 = 0x92
    _Bool _infersDiscretionary;	// 147 = 0x93
    _Bool _shouldPullInitialCredentials;	// 148 = 0x94
    CDUnknownBlockType _completeReconnectionBlock;	// 152 = 0x98
    int _clientPID;	// 160 = 0xa0
    NSXPCConnection *_xpcConn;	// 168 = 0xa8
    NSString *_watchExtensionBundleIdentifier;	// 176 = 0xb0
    _Bool _retryDataTasks;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_workQueue;	// 192 = 0xc0
    NDCallbackQueue *_callbackQueue;	// 200 = 0xc8
    NDApplication *_monitoredApplication;	// 208 = 0xd0
    NSMutableDictionary *_identifiersToTaskInfo;	// 216 = 0xd8
    id <NSXPCProxyCreating><NDBackgroundSessionClient> _clientProxy;	// 224 = 0xe0
    id <NDBackgroundSessionDelegate> _delegate;	// 232 = 0xe8
    NSString *_identifier;	// 240 = 0xf0
    NSString *_clientBundleID;	// 248 = 0xf8
    NSString *_monitoredAppBundleID;	// 256 = 0x100
    NSString *_secondaryID;	// 264 = 0x108
    CDUnknownBlockType _invalidateReply;	// 272 = 0x110
    NSString *_sharedContainerIdentifier;	// 280 = 0x118
}

@property(copy) NSString *sharedContainerIdentifier; // @synthesize sharedContainerIdentifier=_sharedContainerIdentifier;
@property(copy) CDUnknownBlockType invalidateReply; // @synthesize invalidateReply=_invalidateReply;
@property(readonly) NSString *secondaryID; // @synthesize secondaryID=_secondaryID;
@property(readonly) NSString *monitoredAppBundleID; // @synthesize monitoredAppBundleID=_monitoredAppBundleID;
@property(readonly) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property __weak id <NDBackgroundSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;	// IMP=0x000000010002bc64
- (_Bool)_delegateOptions_clientImplementsCollectingMetrics;	// IMP=0x000000010002bba8
- (void)_URLSession:(id)arg1 task:(id)arg2 getAuthHeadersForResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010002b484
- (void)_URLSession:(id)arg1 openFileAtPath:(id)arg2 mode:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010002b020
- (id)_URLSession:(id)arg1 downloadTaskNeedsDownloadDirectory:(id)arg2;	// IMP=0x000000010002af8c
- (void)_URLSession:(id)arg1 downloadTask:(id)arg2 didReceiveResponse:(id)arg3;	// IMP=0x000000010002acc0
- (void)URLSession:(id)arg1 task:(id)arg2 _conditionalRequirementsChanged:(_Bool)arg3;	// IMP=0x000000010002ab30
- (void)URLSession:(id)arg1 task:(id)arg2 _isWaitingForConnectionWithReason:(long long)arg3;	// IMP=0x000000010002a928
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100029fbc
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;	// IMP=0x0000000100029d84
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;	// IMP=0x0000000100029b18
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;	// IMP=0x00000001000298e4
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;	// IMP=0x0000000100029504
- (void)_URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010002905c
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100028894
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100028874
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x00000001000278b4
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3;	// IMP=0x00000001000275cc
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;	// IMP=0x0000000100027188
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;	// IMP=0x000000010002702c
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100026330
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000001000256c8
- (_Bool)trustPassesExtendedValidation:(struct __SecTrust *)arg1;	// IMP=0x0000000100025514
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;	// IMP=0x00000001000252e8
- (void)invalidateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000100025104
- (void)resetStorageWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010002509c
- (void)setTLSCachePrefix:(id)arg1;	// IMP=0x0000000100024fb4
- (void)setDiscretionaryOverride:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000100024b80
- (void)setBytesPerSecondLimit:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x000000010002493c
- (void)setLoadingPoolPriority:(double)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000100024620
- (void)setPriority:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0000000100023ddc
- (void)setDescription:(id)arg1 forTask:(unsigned long long)arg2;	// IMP=0x0000000100023c4c
- (void)setPropertyOnStreamWithIdentifier:(unsigned long long)arg1 propDict:(id)arg2 propKey:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100023984
- (void)resumeTaskWithIdentifier:(unsigned long long)arg1 withProperties:(id)arg2;	// IMP=0x00000001000234dc
- (_Bool)shouldContinueDownloadBasedOnDiskSpace:(unsigned long long)arg1;	// IMP=0x00000001000231e0
- (void)suspendTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x0000000100022fe4
- (void)cancelTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x0000000100022dcc
- (void)cancelTaskWithIdentifier:(unsigned long long)arg1 byProducingResumeData:(CDUnknownBlockType)arg2;	// IMP=0x0000000100022a64
- (void)avAggregateAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 serializedMediaSelections:(id)arg2 assetTitle:(id)arg3 assetArtworkData:(id)arg4 options:(id)arg5 childDownloadSessionIdentifier:(id)arg6 identifier:(unsigned long long)arg7 uniqueIdentifier:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x0000000100022a44
- (void)avAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 URL:(id)arg2 destinationURL:(id)arg3 temporaryDestinationURL:(id)arg4 assetTitle:(id)arg5 assetArtworkData:(id)arg6 options:(id)arg7 identifier:(unsigned long long)arg8 uniqueIdentifier:(id)arg9 reply:(CDUnknownBlockType)arg10;	// IMP=0x0000000100022a24
- (void)dataTaskWithRequest:(id)arg1 originalRequest:(id)arg2 identifier:(unsigned long long)arg3 uniqueIdentifier:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100022670
- (void)uploadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 fromFile:(id)arg3 sandboxExtensionData:(id)arg4 identifier:(unsigned long long)arg5 uniqueIdentifier:(id)arg6 potentialCredentials:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100021cbc
- (void)downloadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 downloadFilePath:(id)arg3 identifier:(unsigned long long)arg4 uniqueIdentifier:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000010002172c
- (void)downloadTaskWithResumeData:(id)arg1 identifier:(unsigned long long)arg2 uniqueIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001000212d8
- (void)performCommonSetupForTask:(id)arg1 taskInfo:(id)arg2 identifier:(unsigned long long)arg3 discretionaryStatus:(_Bool)arg4;	// IMP=0x0000000100020ec0
- (void)setupDASPropertiesOnTask:(id)arg1 taskInfo:(id)arg2 discretionaryStatus:(_Bool)arg3;	// IMP=0x00000001000206ac
- (void)wakeUpClient;	// IMP=0x0000000100020168
- (void)clientAcknowledgedTerminalCallbackForTask:(unsigned long long)arg1;	// IMP=0x000000010001fe48
- (void)errorOccurredDuringAuthCallbackDelivery:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010001fd8c
- (void)errorOccurredDuringFinishedCallbackDelivery:(id)arg1;	// IMP=0x000000010001fd38
- (id)getClientProxy;	// IMP=0x000000010001fd28
- (id)inputStreamWithFileHandle:(id)arg1 taskIdentifier:(unsigned long long)arg2;	// IMP=0x000000010001fb84
- (id)makeTempUploadFile:(id)arg1 withExtensionData:(id)arg2;	// IMP=0x000000010001f6e4
- (void)requeueTask:(unsigned long long)arg1;	// IMP=0x000000010001f6d4
- (void)requeueTask:(unsigned long long)arg1 skipResume:(_Bool)arg2;	// IMP=0x000000010001f4ec
- (void)removeOutstandingTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x000000010001f478
- (void)addOutstandingTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x000000010001f404
- (void)enqueueTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x000000010001f16c
- (void)taskShouldSuspend:(unsigned long long)arg1;	// IMP=0x000000010001ee7c
- (void)taskShouldResume:(unsigned long long)arg1;	// IMP=0x000000010001e6a4
- (void)handleWillBeginDelayedRequestForTaskWithIdentifier:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010001dbd4
- (void)handleEarliestBeginDateForTaskWithIdentifier:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010001d418
- (void)cancelMonitorForTask:(unsigned long long)arg1;	// IMP=0x000000010001d304
- (_Bool)currentDiscretionaryStatus:(id)arg1 withOptionalTaskInfo:(id)arg2;	// IMP=0x000000010001cbb4
- (long long)priorityForDiscretionaryStatus:(_Bool)arg1;	// IMP=0x000000010001cba0
- (id)getTLSCachePrefix;	// IMP=0x000000010001cad0
- (id)getTasksForReconnection;	// IMP=0x000000010001c8e8
- (void)triggerPowerlogPeriodicUpdate;	// IMP=0x000000010001c6f8
- (void)fillInPropertiesForTaskInfo:(id)arg1 withTaskID:(id)arg2;	// IMP=0x000000010001c61c
- (void)fillInByteCountsForTaskInfo:(id)arg1 withTaskID:(id)arg2;	// IMP=0x000000010001c500
- (void)allowReconnect;	// IMP=0x000000010001c21c
- (void)reconnectClient:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010001bee4
- (void)clientDidDisconnect;	// IMP=0x000000010001bdfc
- (void)cancelTasksRequiringClientConnectionAndResumeUnstartedTasks;	// IMP=0x000000010001b940
- (_Bool)finalizeTaskCompletionWithSuppressedWake:(_Bool)arg1;	// IMP=0x000000010001b8ac
- (void)handleCompletionOfTask:(id)arg1 identifier:(unsigned long long)arg2 taskInfo:(id)arg3 isRecoverable:(_Bool)arg4 suppressWake:(_Bool)arg5;	// IMP=0x000000010001b764
- (_Bool)clientIsActive;	// IMP=0x000000010001b74c
- (_Bool)sessionHasOutstandingTasks;	// IMP=0x000000010001b71c
- (void)removeUploadFileForTaskInfo:(id)arg1;	// IMP=0x000000010001b6a8
- (void)removeDownloadFileForTaskInfo:(id)arg1;	// IMP=0x000000010001b5f0
- (_Bool)retryTask:(id)arg1 originalError:(id)arg2 timingData:(id)arg3;	// IMP=0x000000010001aa10
- (id)clientErrorForError:(id)arg1;	// IMP=0x000000010001a740
- (id)restoreTasks:(_Bool *)arg1;	// IMP=0x000000010001a5a8
- (id)restoreTasksFromArchivedInfo:(id)arg1;	// IMP=0x0000000100019cc8
- (id)restoreTask:(id)arg1 isOutstanding:(_Bool *)arg2;	// IMP=0x0000000100019764
- (id)restoreCompletedTask:(id)arg1;	// IMP=0x00000001000190a0
- (id)restoreInProgressTask:(id)arg1;	// IMP=0x0000000100018a38
- (id)createNewTaskFromInfo:(id)arg1;	// IMP=0x0000000100018408
- (void)initializeTask:(id)arg1 fromTaskInfo:(id)arg2;	// IMP=0x0000000100017fbc
- (void)adjustDiscretionaryStatusForTaskInfo:(id)arg1;	// IMP=0x0000000100017dc4
- (id)requestWithAdjustedWindowForTaskInfo:(id)arg1;	// IMP=0x0000000100017a9c
- (id)descriptionForTCPConnectionWaitingReason:(long long)arg1;	// IMP=0x0000000100017920
- (id)descriptionForRequest:(id)arg1;	// IMP=0x00000001000177e8
- (id)descriptionForTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x00000001000176f0
- (void)archiveTaskInfo:(_Bool)arg1;	// IMP=0x00000001000173c0
- (id)tasksArchivePath;	// IMP=0x0000000100017340
- (void)obliterate;	// IMP=0x00000001000170f4
- (void)cleanupSessionWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100016f90
- (id)setupDownloadDirectory;	// IMP=0x0000000100016cec
- (void)clientApplicationWasReinstalled;	// IMP=0x000000010001681c
- (void)applicationWasSuspended:(id)arg1;	// IMP=0x00000001000165dc
- (_Bool)hasConnectedClient;	// IMP=0x00000001000165ac
- (void)setXPCConnection:(id)arg1;	// IMP=0x00000001000162c8
- (id)sessionForDiscretionaryStatus:(_Bool)arg1;	// IMP=0x0000000100016294
- (id)initWithConfiguration:(id)arg1 bundleID:(id)arg2 isSpringBoardApp:(_Bool)arg3 downloadDirectory:(id)arg4 options:(id)arg5 clientProxy:(id)arg6 delegate:(id)arg7 workQueue:(id)arg8 archiveQueue:(id)arg9;	// IMP=0x0000000100015114
- (id)configurationWithClientConfiguration:(id)arg1 discretionary:(_Bool)arg2;	// IMP=0x0000000100014374
- (double)defaultWindowDurationForResourceTimeout:(double)arg1;	// IMP=0x0000000100014350

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

