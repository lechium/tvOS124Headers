//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug  6 2017 21:40:27).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SDUnlockSessionManager.h"

#import "SDUnlockIDSControllerDelegate-Protocol.h"

@class NSData, NSDate, NSObject, NSString, NSTimer, SDUnlockMotionDetector, SDUnlockWakeGestureRecord;
@protocol OS_dispatch_semaphore, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface SDUnlockLockManager : SDUnlockSessionManager <SDUnlockIDSControllerDelegate>
{
    _Bool _inPosition;	// 8 = 0x8
    _Bool _canRetrySetup;	// 9 = 0x9
    _Bool _sentLockedState;	// 10 = 0xa
    _Bool _checkingWristState;	// 11 = 0xb
    _Bool _waitingForAuthToken;	// 12 = 0xc
    _Bool _preventingExitForSetup;	// 13 = 0xd
    _Bool _onWristForCurrentSession;	// 14 = 0xe
    _Bool _checkingWristAndMotionState;	// 15 = 0xf
    NSString *_requestID;	// 16 = 0x10
    NSDate *_wristOnDate;	// 24 = 0x18
    NSTimer *_enableTimer;	// 32 = 0x20
    NSData *_tempLongTermKey;	// 40 = 0x28
    NSDate *_sessionStartDate;	// 48 = 0x30
    NSString *_passcode;	// 56 = 0x38
    long long _unlockSessionID;	// 64 = 0x40
    NSObject<OS_dispatch_source> *_longTermKeyTimer;	// 72 = 0x48
    long long _deviceOffWristForSessionID;	// 80 = 0x50
    NSObject<OS_dispatch_source> *_wristAndMotionTimer;	// 88 = 0x58
    NSObject<OS_dispatch_semaphore> *_positionSemaphore;	// 96 = 0x60
    SDUnlockMotionDetector *_motionDetector;	// 104 = 0x68
    SDUnlockWakeGestureRecord *_lastWakeGestureRecord;	// 112 = 0x70
    CDUnknownBlockType _enableHandler;	// 120 = 0x78
    CDUnknownBlockType _wristAndMotionStateHandler;	// 128 = 0x80
}

+ (id)sharedLockManager;	// IMP=0x0000000100045da8
@property(copy) CDUnknownBlockType wristAndMotionStateHandler; // @synthesize wristAndMotionStateHandler=_wristAndMotionStateHandler;
@property(copy) CDUnknownBlockType enableHandler; // @synthesize enableHandler=_enableHandler;
@property(retain) SDUnlockWakeGestureRecord *lastWakeGestureRecord; // @synthesize lastWakeGestureRecord=_lastWakeGestureRecord;
@property(retain) SDUnlockMotionDetector *motionDetector; // @synthesize motionDetector=_motionDetector;
@property(retain) NSObject<OS_dispatch_semaphore> *positionSemaphore; // @synthesize positionSemaphore=_positionSemaphore;
@property(retain) NSObject<OS_dispatch_source> *wristAndMotionTimer; // @synthesize wristAndMotionTimer=_wristAndMotionTimer;
@property long long deviceOffWristForSessionID; // @synthesize deviceOffWristForSessionID=_deviceOffWristForSessionID;
@property(retain) NSObject<OS_dispatch_source> *longTermKeyTimer; // @synthesize longTermKeyTimer=_longTermKeyTimer;
@property _Bool checkingWristAndMotionState; // @synthesize checkingWristAndMotionState=_checkingWristAndMotionState;
@property _Bool onWristForCurrentSession; // @synthesize onWristForCurrentSession=_onWristForCurrentSession;
@property _Bool preventingExitForSetup; // @synthesize preventingExitForSetup=_preventingExitForSetup;
@property long long unlockSessionID; // @synthesize unlockSessionID=_unlockSessionID;
@property(copy) NSString *passcode; // @synthesize passcode=_passcode;
@property(retain) NSDate *sessionStartDate; // @synthesize sessionStartDate=_sessionStartDate;
@property _Bool waitingForAuthToken; // @synthesize waitingForAuthToken=_waitingForAuthToken;
@property _Bool checkingWristState; // @synthesize checkingWristState=_checkingWristState;
@property(retain) NSData *tempLongTermKey; // @synthesize tempLongTermKey=_tempLongTermKey;
@property(retain) NSTimer *enableTimer; // @synthesize enableTimer=_enableTimer;
@property _Bool sentLockedState; // @synthesize sentLockedState=_sentLockedState;
@property(retain) NSDate *wristOnDate; // @synthesize wristOnDate=_wristOnDate;
@property(retain) NSString *requestID; // @synthesize requestID=_requestID;
@property _Bool canRetrySetup; // @synthesize canRetrySetup=_canRetrySetup;
@property(nonatomic) _Bool inPosition; // @synthesize inPosition=_inPosition;
- (void).cxx_destruct;	// IMP=0x000000010004c08c
- (void)sendStateResponseWithUnlockEnabled:(_Bool)arg1 passcodeEnabled:(_Bool)arg2;	// IMP=0x000000010004bbd8
- (void)sendStashConfirmation:(_Bool)arg1 sessionID:(unsigned int)arg2;	// IMP=0x000000010004ba44
- (void)sendStashKeyExchangeResponse:(id)arg1 sessionID:(unsigned int)arg2 errorCode:(long long)arg3;	// IMP=0x000000010004b880
- (void)sendSessionUnlockConfirmation:(_Bool)arg1 sessionID:(unsigned int)arg2;	// IMP=0x000000010004b6ec
- (void)sendKeyExchangeResponse:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x000000010004b4f4
- (void)sendCreateEscrowSecretWithStepData:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x000000010004b1c4
- (void)sendSetupRequest:(id)arg1 withSessionID:(unsigned int)arg2;	// IMP=0x000000010004ae98
- (void)sendClassALongTermKeyRequest:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x000000010004ab54
- (void)sendLongTermKeyRequest:(id)arg1 requestID:(id)arg2;	// IMP=0x000000010004a904
- (void)sendDeviceLockStateChanged:(_Bool)arg1;	// IMP=0x000000010004a74c
- (void)handleUnlockStateRequest:(id)arg1;	// IMP=0x000000010004a660
- (void)handleStashToken:(id)arg1;	// IMP=0x000000010004a4f0
- (void)handleStashKeyExchangeRequest:(id)arg1;	// IMP=0x000000010004a27c
- (void)handleSessionAuthToken:(id)arg1;	// IMP=0x0000000100049e1c
- (void)handleSessionKeyExchangeRequest:(id)arg1;	// IMP=0x000000010004960c
- (void)handleSetupCreateRecord:(id)arg1;	// IMP=0x0000000100049094
- (void)handleEscrowSessionRequest:(id)arg1;	// IMP=0x0000000100048a6c
- (void)handleSetupSessionCreated:(id)arg1;	// IMP=0x0000000100048694
- (_Bool)updateLongTermKeys:(id)arg1;	// IMP=0x00000001000485a0
- (void)handleClassALongTermKeyResponse:(id)arg1;	// IMP=0x000000010004821c
- (void)handleLongTermKeyResponse:(id)arg1;	// IMP=0x0000000100047e88
- (void)handleStartLTK:(id)arg1;	// IMP=0x0000000100047d88
- (void)idsControllerSpaceDidBecomeAvailable:(id)arg1;	// IMP=0x0000000100047d0c
- (void)idsController:(id)arg1 didReceiveProtoData:(id)arg2 forType:(unsigned short)arg3;	// IMP=0x0000000100047b08
- (void)allowExiting;	// IMP=0x0000000100047ab8
- (void)preventExiting;	// IMP=0x0000000100047a68
- (void)getWristAndMotionStateWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100047a4c
- (_Bool)lostModeEnabled;	// IMP=0x000000010004794c
- (_Bool)localDeviceLocked;	// IMP=0x00000001000478f0
- (void)resetLongTermKeyRequest;	// IMP=0x00000001000478a0
- (void)resetState;	// IMP=0x0000000100047810
- (void)disableUnlockPairing;	// IMP=0x0000000100047790
- (void)forceOnWristCheck;	// IMP=0x000000010004778c
- (void)wristDetectionDisabled:(CDUnknownBlockType)arg1;	// IMP=0x0000000100047770
- (_Bool)deviceOnWrist;	// IMP=0x0000000100047764
- (_Bool)unlockEnabled;	// IMP=0x0000000100047690
- (void)notifyEnableStateWithError:(id)arg1;	// IMP=0x000000010004748c
- (void)enableUnlockForcingLTKTransfer:(_Bool)arg1;	// IMP=0x0000000100047158
- (void)enableUnlockWithDevice:(id)arg1 passcode:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100046bb0
- (void)invalidateLongTermKeyTimer;	// IMP=0x0000000100046b20
- (void)restartLongTermKeyTimer;	// IMP=0x0000000100046990
- (void)invalidateEnableTimer;	// IMP=0x0000000100046944
- (void)enableTimerFired:(id)arg1;	// IMP=0x0000000100046834
- (void)restartEnableTimerWithTimeout:(double)arg1;	// IMP=0x00000001000467b0
- (void)checkKeyBagState;	// IMP=0x0000000100046658
- (void)devicesDidUnpair:(id)arg1;	// IMP=0x00000001000465ec
- (void)handleDevicesDidFailToPair;	// IMP=0x0000000100046590
- (void)handleConfigurationState;	// IMP=0x00000001000463f0
- (void)keyBagLockStateChange:(id)arg1;	// IMP=0x0000000100046198
- (id)generateDebugInfo;	// IMP=0x0000000100046098
- (void)debugInfoRequested:(id)arg1;	// IMP=0x000000010004602c
- (void)addObservers;	// IMP=0x0000000100045ff8
- (id)init;	// IMP=0x0000000100045e28

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

