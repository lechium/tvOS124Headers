//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug  6 2017 21:40:27).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MCProfileConnectionObserver-Protocol.h"
#import "SDStatusMonitorProtocol-Protocol.h"

@class BluetoothManager, CNContact, CNContactStore, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSString, SDAirDropServer;

__attribute__((visibility("hidden")))
@interface SDStatusMonitor : NSObject <MCProfileConnectionObserver, SDStatusMonitorProtocol>
{
    _Bool _activateStarted;	// 8 = 0x8
    int _airDropCount;	// 12 = 0xc
    _Bool _airDropPublished;	// 16 = 0x10
    NSNumber *_backlightOn;	// 24 = 0x18
    int _backlightLevelToken;	// 32 = 0x20
    NSString *_bonjourName;	// 40 = 0x28
    _Bool _carplayConnected;	// 48 = 0x30
    NSMutableDictionary *_certificates;	// 56 = 0x38
    NSString *_computerName;	// 64 = 0x40
    NSNumber *_computerToComputer;	// 72 = 0x48
    NSString *_consoleUser;	// 80 = 0x50
    unsigned int _consoleUserID;	// 88 = 0x58
    CNContactStore *_contactStore;	// 96 = 0x60
    NSString *_currentDiscoverableMode;	// 104 = 0x68
    NSString *_deviceInformation;	// 112 = 0x70
    _Bool _deviceIsHighPriority;	// 120 = 0x78
    NSNumber *_deviceKeyBagState;	// 128 = 0x80
    NSNumber *_deviceKeyBagUnlocked;	// 136 = 0x88
    NSNumber *_deviceSupportsWAPI;	// 144 = 0x90
    NSNumber *_deviceUIUnlocked;	// 152 = 0x98
    _Bool _deviceWasUnlockedOnce;	// 160 = 0xa0
    struct __CFRunLoopSource *_dynamicStoreSource;	// 168 = 0xa8
    _Bool _finderAirDropEnabled;	// 176 = 0xb0
    SDAirDropServer *_finderServer;	// 184 = 0xb8
    NSNumber *_handoffVisible;	// 192 = 0xc0
    NSMutableDictionary *_identities;	// 200 = 0xc8
    int _keyBagUnlockToken;	// 208 = 0xd0
    NSNumber *_legacyModeEnabled;	// 216 = 0xd8
    NSString *_localHostName;	// 224 = 0xe0
    NSDictionary *_mountPoints;	// 232 = 0xe8
    NSString *_myAppleID;	// 240 = 0xf0
    NSString *_myAppleIDCommonName;	// 248 = 0xf8
    struct __SecIdentity *_myAppleIDSecIdentity;	// 256 = 0x100
    NSMutableString *_myEmailHashes;	// 264 = 0x108
    NSData *_myLegacyAirDropIcon;	// 272 = 0x110
    NSString *_myLegacyAirDropIconHash;	// 280 = 0x118
    NSMutableString *_myPhoneHashes;	// 288 = 0x120
    struct _DNSServiceRef_t *_nameMonitor;	// 296 = 0x128
    _Bool _needsExitForLocaleChange;	// 304 = 0x130
    NSString *_netbiosName;	// 312 = 0x138
    unsigned int _notifierObject;	// 320 = 0x140
    struct IONotificationPort *_notifyPortRef;	// 328 = 0x148
    NSDictionary *_odisksMountPoints;	// 336 = 0x150
    long long _pairedWatchWristState;	// 344 = 0x158
    NSNumber *_personalHotspotAllowed;	// 352 = 0x160
    struct __IOPMConnection *_pmConnection;	// 360 = 0x168
    NSMutableSet *_preventExitForLocaleReasons;	// 368 = 0x170
    unsigned int _rootPort;	// 376 = 0x178
    NSNumber *_screenOn;	// 384 = 0x180
    NSMutableDictionary *_serverNames;	// 392 = 0x188
    struct __SCPreferences *_smbPreferences;	// 400 = 0x190
    NSMutableDictionary *_ssidHashes;	// 408 = 0x198
    unsigned int _systemUIFlags;	// 416 = 0x1a0
    int _uiLockStatusToken;	// 420 = 0x1a4
    NSNumber *_wirelessAccessPoint;	// 424 = 0x1a8
    NSString *_workgroup;	// 432 = 0x1b0
    long long _watchWristState;	// 440 = 0x1b8
    NSString *_requestedDiscoverableMode;	// 448 = 0x1c0
    struct __WiFiDeviceClient *_wifiDevice;	// 456 = 0x1c8
    struct __WiFiDeviceClient *_awdlDevice;	// 464 = 0x1d0
    struct __WiFiManagerClient *_wifiManager;	// 472 = 0x1d8
    _Bool _wifiDeviceAttachmentRegistered;	// 480 = 0x1e0
    _Bool _wifiScheduledOnRunLoop;	// 481 = 0x1e1
    BluetoothManager *_bluetoothManager;	// 488 = 0x1e8
    int _screenBlankedToken;	// 496 = 0x1f0
    NSMutableDictionary *_longHashesToContactIdentifier;	// 504 = 0x1f8
    NSMutableDictionary *_mediumHashesToContactIdentifier;	// 512 = 0x200
    NSMutableSet *_shortHashes;	// 520 = 0x208
    _Bool _controlCenterVisible;	// 528 = 0x210
    _Bool _multipleUsersLoggedIn;	// 529 = 0x211
    CNContact *___meCard;	// 536 = 0x218
    NSDictionary *_awdlState;	// 544 = 0x220
    NSDate *_lastDarkWakeDate;	// 552 = 0x228
}

+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x00000001000e9050
+ (id)sharedMonitor;	// IMP=0x00000001000dfc30
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDictionary *awdlState; // @synthesize awdlState=_awdlState;
- (void).cxx_destruct;	// IMP=0x00000001000ec5b8
- (void)logWiFiPowerState;	// IMP=0x00000001000ec4a0
- (void)clearWirelessState;	// IMP=0x00000001000ec45c
- (void)clearOperationModeInfo;	// IMP=0x00000001000ec404
- (void)installSSIDCacheMonitor;	// IMP=0x00000001000ec1c0
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x00000001000ec08c
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x00000001000ec064
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x00000001000ebfdc
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x00000001000ebec0
- (void)installWristStateMonitor;	// IMP=0x00000001000ebebc
- (void)installVolumesMonitor;	// IMP=0x00000001000ebeb8
- (void)installUserPictureMonitor;	// IMP=0x00000001000ebeb4
- (void)installUILockStatusMonitor;	// IMP=0x00000001000ebeb0
- (void)installSystemUIMonitor;	// IMP=0x00000001000ebeac
- (void)installSpringBoardStateMonitor;	// IMP=0x00000001000ebc94
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x00000001000ebc8c
- (void)reloadSMBConfInfo;	// IMP=0x00000001000ebb18
- (void)installSMBPreferencesMonitor;	// IMP=0x00000001000ebb14
- (void)installSleepWakeCallBack;	// IMP=0x00000001000eba20
- (void)installSleepNotification;	// IMP=0x00000001000eba1c
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x00000001000eb818
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x00000001000eb80c
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x00000001000eb78c
- (void)installMISMonitor;	// IMP=0x00000001000eb728
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x00000001000eb660
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x00000001000eb564
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x00000001000eb41c
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x00000001000eb410
- (void)installManagedConfigurationMonitor;	// IMP=0x00000001000eb354
- (void)installLocaleChangeMonitor;	// IMP=0x00000001000eb17c
- (void)installKeyBagUnlockMonitor;	// IMP=0x00000001000eafe0
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x00000001000eafdc
- (void)installDynamicStoreCallBack;	// IMP=0x00000001000eacdc
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x00000001000eaa18
- (void)installDisplaySleepMonitor;	// IMP=0x00000001000eaa14
- (void)installDisplayConfigurationMonitor;	// IMP=0x00000001000eaa10
- (void)installCoreTelephonyMonitor;	// IMP=0x00000001000eaa0c
- (void)installContactsMonitor;	// IMP=0x00000001000ea904
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x00000001000ea808
- (void)installClamshellStateChangeMonitor;	// IMP=0x00000001000ea804
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x00000001000ea800
- (void)installWirelessCarPlayMonitor;	// IMP=0x00000001000ea7fc
- (void)installCarPlayStatusMonitor;	// IMP=0x00000001000ea7f8
- (void)restartBonjourNameMonitor;	// IMP=0x00000001000ea7a8
- (void)uninstallBonjourNameMonitor;	// IMP=0x00000001000ea774
- (void)installBonjourNameMonitor;	// IMP=0x00000001000ea600
- (void)logBluetoothPowerState;	// IMP=0x00000001000ea530
- (void)logBluetoothAvailabilityState:(_Bool)arg1;	// IMP=0x00000001000ea470
- (void)installBluetoothMonitor;	// IMP=0x00000001000ea34c
- (void)bluetoothAvailabilityChange:(id)arg1;	// IMP=0x00000001000ea2c8
- (void)installBacklightMonitor;	// IMP=0x00000001000ea2c4
- (void)updateWirelessDevice;	// IMP=0x00000001000e9c70
- (void)installWirelessMonitor;	// IMP=0x00000001000e9bac
- (void)updateAWDLStateInfo;	// IMP=0x00000001000e9b64
- (void)handleAWDLState:(id)arg1;	// IMP=0x00000001000e9920
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x00000001000e985c
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x00000001000e97b4
- (void)installAppleIDUsernameMonitor;	// IMP=0x00000001000e9724
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x00000001000e9624
- (void)installAirDropStatusMonitor;	// IMP=0x00000001000e95bc
- (void)airDropStatusChanged:(id)arg1;	// IMP=0x00000001000e94fc
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wirelessAccessPoint;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool preferABImages;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool legacyModeSettable;
@property(readonly) _Bool legacyDevice;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool enableNewHashing;
@property(readonly) _Bool forceLeashingAlertsWhenWiFiConnected;
@property(readonly) _Bool enableLeashing;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool enableABImages;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool computerToComputer;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool isBuddyCompleted;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool broadcastPicture;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly, getter=isLegacyAirDropAvailable) _Bool legacyAirDropAvailable;
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myName;
@property(readonly) NSString *myLegacyAirDropIconHash;
@property(readonly) NSData *myLegacyAirDropIcon;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x00000001000e77f0
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
@property(readonly) int leashingTimeToWaitBeforeAlerting;
- (void)clearLocalHostName;	// IMP=0x00000001000e7458
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x00000001000e6eb0
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x00000001000e6e20
@property(readonly) NSString *computerName;
@property(readonly) NSString *bonjourName;
- (id)awdlStateInfo;	// IMP=0x00000001000e6bec
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
@property _Bool wirelessEnabled;
@property _Bool legacyModeEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x00000001000e64c4
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x00000001000e62e0
- (id)defaultWiFiDevice;	// IMP=0x00000001000e62a0
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x00000001000e6298
- (void)postNotification:(id)arg1;	// IMP=0x00000001000e6288
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x00000001000e61f8
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x00000001000e608c
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x00000001000e5f64
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x00000001000e5f54
- (void)updatePersonalHotspotAllowed;	// IMP=0x00000001000e5e60
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x00000001000e5db0
- (_Bool)lteConnectionShows4G;	// IMP=0x00000001000e5da8
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x00000001000e5d94
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x00000001000e5bd8
- (void)resetMeCard;	// IMP=0x00000001000e5b94
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x00000001000e5714
- (id)addressOrNumForHash:(id)arg1;	// IMP=0x00000001000e54c0
- (id)infoForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x00000001000e53cc
- (void)generateContactHashes;	// IMP=0x00000001000e4d68
- (id)fallbackMeCardImageData;	// IMP=0x00000001000e4d60
- (id)emailsForContact:(id)arg1;	// IMP=0x00000001000e4bc8
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x00000001000e4854
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x00000001000e46a0
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x00000001000e4698
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x00000001000e4690
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x00000001000e4510
- (id)contactForCombinedHash:(id)arg1;	// IMP=0x00000001000e4294
- (id)contactForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x00000001000e41a0
- (void)clearMyIconAndHash;	// IMP=0x00000001000e4138
- (void)clearContactsInfo;	// IMP=0x00000001000e40c0
- (void)addPhoneNumbers:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x00000001000e3cfc
- (void)addEmails:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x00000001000e38d8
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x00000001000e32d8
- (id)awdlNetwork;	// IMP=0x00000001000e3134
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x00000001000e2e64
- (id)awdlDevice;	// IMP=0x00000001000e2e24
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x00000001000e2d80
- (id)unifiedAppleIDInfo;	// IMP=0x00000001000e287c
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x00000001000e27b4
- (void)hsa2EnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e2528
- (void)handleAppleAccountSignOut;	// IMP=0x00000001000e2490
- (void)handleAppleAccountSignIn;	// IMP=0x00000001000e23f8
- (void)fixAltDSIDIfNeeded;	// IMP=0x00000001000e20b8
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x00000001000e1ff0
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x00000001000e1f48
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x00000001000e1efc
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x00000001000e1e80
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x00000001000e1ddc
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x00000001000e1cd8
- (void)clearMyAppleIDInfo;	// IMP=0x00000001000e1c30
- (void)cacheIdentity:(id)arg1;	// IMP=0x00000001000e1b48
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x00000001000e1a7c
- (_Bool)appleIDValidateRecord:(id)arg1 validationRecord:(out id *)arg2;	// IMP=0x00000001000e1718
- (long long)appleIDAccountState;	// IMP=0x00000001000e1574
- (void)updateDiscoverableMode;	// IMP=0x00000001000e1344
- (void)setServerMountPoints:(id)arg1;	// IMP=0x00000001000e12a4
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x00000001000e1184
- (id)serverNameForHost:(id)arg1;	// IMP=0x00000001000e10c4
- (void)removeServerName:(id)arg1;	// IMP=0x00000001000e1028
- (id)reconciledDiscoverableMode;	// IMP=0x00000001000e0e6c
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x00000001000e0dd0
- (id)newDiscoverableMode;	// IMP=0x00000001000e0aa0
- (id)mountPointsForServer:(id)arg1;	// IMP=0x00000001000e0a04
- (_Bool)isAirDropReady;	// IMP=0x00000001000e08ac
- (int)discoverableLevel;	// IMP=0x00000001000e07f4
- (id)defaultDiscoverableMode;	// IMP=0x00000001000e07d4
- (id)createHostNameKey:(id)arg1;	// IMP=0x00000001000e0714
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x00000001000e05fc
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x00000001000e0568
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x00000001000e0484
- (void)clearMonitorCache;	// IMP=0x00000001000e0340
- (void)activate;	// IMP=0x00000001000e0094
- (id)init;	// IMP=0x00000001000dfcc8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

