//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BSDebugDescriptionProviding-Protocol.h"

@class BKLaunchdJob, BSMachPortSendRight, BSMachPortTaskNameRight, BSPortDeathWatcher, BSProcessHandle, NSHashTable, NSMutableDictionary, NSMutableOrderedSet, NSNumber, NSSet, NSString;
@protocol BKProcessDelegate, OS_dispatch_queue, OS_dispatch_source, OS_xpc_object;

@interface BKProcess : NSObject <BSDebugDescriptionProviding>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    struct BKProcessTimes _times;	// 16 = 0x10
    long long _taskState;	// 56 = 0x38
    NSString *_prettyDescription;	// 64 = 0x40
    BSMachPortSendRight *_taskPortRight;	// 72 = 0x48
    unsigned int _taskSuspensionToken;	// 80 = 0x50
    BSMachPortTaskNameRight *_taskNameRight;	// 88 = 0x58
    BSPortDeathWatcher *_deathWatcher;	// 96 = 0x60
    _Bool _pendingTermination;	// 104 = 0x68
    double _timedAssertionPermittedDuration;	// 112 = 0x70
    double _timedAssertionReferenceTime;	// 120 = 0x78
    _Bool _timedAssertionDeadlineActive;	// 128 = 0x80
    double _allowIdleSleepReferenceTime;	// 136 = 0x88
    double _suspendedUntilUnlockReferenceTime;	// 144 = 0x90
    _Bool _forceAllowIdleSleepForTaskCompletion;	// 152 = 0x98
    NSObject<OS_dispatch_source> *_backgroundPermissionCheckTimer;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_backgroundPermissionExpirationWarningTimer;	// 168 = 0xa8
    NSObject<OS_dispatch_source> *_taskCompletionAllowIdleSleepTimer;	// 176 = 0xb0
    unsigned long long _assertionCountHWM;	// 184 = 0xb8
    unsigned long long _effectiveState;	// 192 = 0xc0
    NSMutableOrderedSet *_allAssertions;	// 200 = 0xc8
    NSMutableOrderedSet *_activeAssertions;	// 208 = 0xd0
    NSMutableOrderedSet *_limitlessAssertions;	// 216 = 0xd8
    NSMutableOrderedSet *_watchdogAssertions;	// 224 = 0xe0
    NSMutableOrderedSet *_externalAssertions;	// 232 = 0xe8
    unsigned int _powerAssertionID;	// 240 = 0xf0
    unsigned long long _priorityBandUserData;	// 248 = 0xf8
    unsigned long long _lastPriorityBandUserData;	// 256 = 0x100
    _Bool _throttleSetForTheFirstTime;	// 264 = 0x108
    _Bool _uiThrottled;	// 265 = 0x109
    _Bool _cpuThrottled;	// 266 = 0x10a
    _Bool _usesSocketMonitoring;	// 267 = 0x10b
    _Bool _supportsUnboundedTaskCompletion;	// 268 = 0x10c
    _Bool _supportsBackgroundNetworkAuthentication;	// 269 = 0x10d
    _Bool _supportsBackgroundContentFetching;	// 270 = 0x10e
    NSMutableDictionary *_cachedInfoDictionaryValues;	// 272 = 0x110
    NSHashTable *_hostedProcesses;	// 280 = 0x118
    NSHashTable *_clients;	// 288 = 0x120
    _Bool _running;	// 296 = 0x128
    _Bool _recordingAudio;	// 297 = 0x129
    _Bool _sideApp;	// 298 = 0x12a
    _Bool _nowPlayingWithAudio;	// 299 = 0x12b
    _Bool _receivingPacketsFromAccessory;	// 300 = 0x12c
    _Bool _workspaceLocked;	// 301 = 0x12d
    _Bool _invalidated;	// 302 = 0x12e
    _Bool _supportsReducedFinishTask;	// 303 = 0x12f
    _Bool _taskSuspended;	// 304 = 0x130
    _Bool _viewService;	// 305 = 0x131
    _Bool _hasWatchdogAssertionsOut;	// 306 = 0x132
    _Bool _hasViewServiceBeenSuspended;	// 307 = 0x133
    _Bool _assertionsWantForegroundResourcePriority;	// 308 = 0x134
    _Bool _eligibleForLoweredJetsamPriority;	// 309 = 0x135
    _Bool _shouldSuspendOnSleep;	// 310 = 0x136
    _Bool _continuousAssertionAllowsIdleBand;	// 311 = 0x137
    _Bool _cpumonIgnore;	// 312 = 0x138
    _Bool _mobileSafari;	// 313 = 0x139
    int _pid;	// 316 = 0x13c
    unsigned int _previousApplicationState;	// 320 = 0x140
    int _currentPriorityBand;	// 324 = 0x144
    int _FGJetsamPriorityBand;	// 328 = 0x148
    int _suspendedPriorityBand;	// 332 = 0x14c
    int _backgroundPriorityBand;	// 336 = 0x150
    int _preferredBackgroundPriorityBand;	// 340 = 0x154
    int _cachedBackgroundRefreshStatus;	// 344 = 0x158
    int _cpumonMode;	// 348 = 0x15c
    int _jetsamLenientMode;	// 352 = 0x160
    id <BKProcessDelegate> _delegate;	// 360 = 0x168
    NSString *_bundleIdentifier;	// 368 = 0x170
    BSProcessHandle *_handle;	// 376 = 0x178
    BKProcess *_hostProcess;	// 384 = 0x180
    long long _agency;	// 392 = 0x188
    BKLaunchdJob *_launchdJob;	// 400 = 0x190
    NSString *_name;	// 408 = 0x198
    long long _visibility;	// 416 = 0x1a0
    NSNumber *_terminationReason;	// 424 = 0x1a8
    NSObject<OS_xpc_object> *_endpoint;	// 432 = 0x1b0
    double _unsuspendLimitStart;	// 440 = 0x1b8
    long long _unsuspendLimitCount;	// 448 = 0x1c0
    long long _lastAssertionDump;	// 456 = 0x1c8
    struct memorystatus_memlimit_properties _initialMemlimit;	// 464 = 0x1d0
}

+ (unsigned long long)_bitForProcessAssertionReason:(unsigned int)arg1;	// IMP=0x000000010001b28c
+ (void)hostwideUserElapsedCPUTime:(double *)arg1 systemElapsedCPUTime:(double *)arg2 idleElapsedCPUTime:(double *)arg3;	// IMP=0x000000010000ce98
+ (int)defaultSuspendedLoweredPriorityBand;	// IMP=0x000000010000ce90
+ (int)defaultSuspendedPriorityBand;	// IMP=0x000000010000ce88
+ (int)defaultBackgroundLoweredPriorityBand;	// IMP=0x000000010000ce80
+ (int)defaultBackgroundPriorityBand;	// IMP=0x000000010000ce78
+ (id)callOutQueue;	// IMP=0x000000010000ce14
@property(nonatomic) long long lastAssertionDump; // @synthesize lastAssertionDump=_lastAssertionDump;
@property(nonatomic) int jetsamLenientMode; // @synthesize jetsamLenientMode=_jetsamLenientMode;
@property(nonatomic, getter=isMobileSafari) _Bool mobileSafari; // @synthesize mobileSafari=_mobileSafari;
@property(nonatomic) struct memorystatus_memlimit_properties initialMemlimit; // @synthesize initialMemlimit=_initialMemlimit;
@property(nonatomic) int cpumonMode; // @synthesize cpumonMode=_cpumonMode;
@property(nonatomic) _Bool cpumonIgnore; // @synthesize cpumonIgnore=_cpumonIgnore;
@property(nonatomic) long long unsuspendLimitCount; // @synthesize unsuspendLimitCount=_unsuspendLimitCount;
@property(nonatomic) double unsuspendLimitStart; // @synthesize unsuspendLimitStart=_unsuspendLimitStart;
@property(nonatomic) int cachedBackgroundRefreshStatus; // @synthesize cachedBackgroundRefreshStatus=_cachedBackgroundRefreshStatus;
@property(nonatomic) _Bool continuousAssertionAllowsIdleBand; // @synthesize continuousAssertionAllowsIdleBand=_continuousAssertionAllowsIdleBand;
@property(nonatomic) _Bool shouldSuspendOnSleep; // @synthesize shouldSuspendOnSleep=_shouldSuspendOnSleep;
@property(nonatomic) _Bool eligibleForLoweredJetsamPriority; // @synthesize eligibleForLoweredJetsamPriority=_eligibleForLoweredJetsamPriority;
@property(nonatomic) _Bool assertionsWantForegroundResourcePriority; // @synthesize assertionsWantForegroundResourcePriority=_assertionsWantForegroundResourcePriority;
@property(nonatomic) int preferredBackgroundPriorityBand; // @synthesize preferredBackgroundPriorityBand=_preferredBackgroundPriorityBand;
@property(nonatomic) int backgroundPriorityBand; // @synthesize backgroundPriorityBand=_backgroundPriorityBand;
@property(nonatomic) int suspendedPriorityBand; // @synthesize suspendedPriorityBand=_suspendedPriorityBand;
@property(nonatomic) int FGJetsamPriorityBand; // @synthesize FGJetsamPriorityBand=_FGJetsamPriorityBand;
@property(nonatomic) int currentPriorityBand; // @synthesize currentPriorityBand=_currentPriorityBand;
@property(nonatomic) _Bool hasViewServiceBeenSuspended; // @synthesize hasViewServiceBeenSuspended=_hasViewServiceBeenSuspended;
@property(nonatomic) _Bool hasWatchdogAssertionsOut; // @synthesize hasWatchdogAssertionsOut=_hasWatchdogAssertionsOut;
@property(nonatomic, getter=isViewService) _Bool viewService; // @synthesize viewService=_viewService;
@property(nonatomic, getter=isTaskSuspended) _Bool taskSuspended; // @synthesize taskSuspended=_taskSuspended;
@property(nonatomic) unsigned int previousApplicationState; // @synthesize previousApplicationState=_previousApplicationState;
@property(retain, nonatomic) NSObject<OS_xpc_object> *endpoint; // @synthesize endpoint=_endpoint;
@property(retain, nonatomic) NSNumber *terminationReason; // @synthesize terminationReason=_terminationReason;
@property(nonatomic) long long visibility; // @synthesize visibility=_visibility;
@property(readonly, nonatomic) _Bool supportsReducedFinishTask; // @synthesize supportsReducedFinishTask=_supportsReducedFinishTask;
@property(readonly, copy, nonatomic) NSString *prettyDescription; // @synthesize prettyDescription=_prettyDescription;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) BKLaunchdJob *launchdJob; // @synthesize launchdJob=_launchdJob;
@property(readonly, nonatomic) long long agency; // @synthesize agency=_agency;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
@property(nonatomic) __weak BKProcess *hostProcess; // @synthesize hostProcess=_hostProcess;
@property(readonly, retain, nonatomic) BSProcessHandle *handle; // @synthesize handle=_handle;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (void).cxx_destruct;	// IMP=0x000000010001ce18
- (id)_crashReportThermalsInfo;	// IMP=0x000000010001c9a4
- (id)_crashReportCPUUsageInfo;	// IMP=0x000000010001c890
- (void)_queue_forceCrashReportWithReason:(int)arg1 description:(id)arg2;	// IMP=0x000000010001c408
- (void)_queue_watchdogTerminateWithReason:(int)arg1 format:(id)arg2;	// IMP=0x000000010001c300
- (id)cachedInfoDictionaryValueForKey:(id)arg1;	// IMP=0x000000010001c1c8
- (id)_queue_cachedInfoDictionaryValueForKey:(id)arg1;	// IMP=0x000000010001bf78
- (void)informKernel;	// IMP=0x000000010001beac
- (void)removeHostedProcess:(id)arg1;	// IMP=0x000000010001bdf4
- (void)addHostedProcess:(id)arg1;	// IMP=0x000000010001bd18
@property(readonly, copy, nonatomic) NSSet *hostedProcesses;
- (void)removeClient:(id)arg1;	// IMP=0x000000010001ba28
- (void)addClient:(id)arg1;	// IMP=0x000000010001b8b4
@property(readonly, copy, nonatomic) NSSet *clients;
- (void)removeWatchdogAssertion:(id)arg1;	// IMP=0x000000010001b6e0
- (void)addWatchdogAssertion:(id)arg1;	// IMP=0x000000010001b5f8
- (void)_queue_checkWatchdogAssertionsCount;	// IMP=0x000000010001b4c4
- (void)_queue_resumeIfSuspendedForSleep;	// IMP=0x000000010001b1a0
- (void)systemWillSleep;	// IMP=0x000000010001b0b8
- (void)_queue_updateBackgroundPermissionCheckTimer;	// IMP=0x0000000100018b20
- (void)_notifyOfExpirationWarning;	// IMP=0x00000001000189f8
- (id)_queue_setupOneShotTimer:(double)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018910
- (void)_queue_cancelTimers;	// IMP=0x00000001000188ac
- (_Bool)_queue_canTerminateProcess;	// IMP=0x000000010001886c
- (_Bool)_queue_hasAssertionForReason:(unsigned int)arg1;	// IMP=0x0000000100018728
- (void)_queue_removeLimitlessAssertion:(id)arg1;	// IMP=0x0000000100018448
- (void)_queue_addLimitlessAssertion:(id)arg1;	// IMP=0x000000010001836c
- (void)_queue_removeAssertion:(id)arg1;	// IMP=0x0000000100017f40
- (void)_queue_deactivateAssertion:(id)arg1;	// IMP=0x0000000100017cf4
- (void)_queue_dumpAssertions:(id)arg1;	// IMP=0x00000001000179d0
- (void)_queue_updateAssertion:(id)arg1;	// IMP=0x00000001000178e0
- (void)_queue_activateAssertion:(id)arg1;	// IMP=0x00000001000175a4
- (void)_queue_addAssertion:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100017210
- (void)_queue_noteAssertionsAdded:(id)arg1 removed:(id)arg2;	// IMP=0x00000001000170b4
- (void)_queue_updateAssertionNeedsForAssertion:(id)arg1;	// IMP=0x0000000100016870
- (unsigned long long)_queue_calculateAssertionStateWithPowerAssertionNames:(id *)arg1 priorityBandData:(unsigned long long *)arg2;	// IMP=0x00000001000163d8
- (_Bool)_queue_hasViewServiceAssertion;	// IMP=0x00000001000163c0
- (_Bool)_queue_canActivateAssertion:(id)arg1;	// IMP=0x0000000100016334
- (void)handleBackgroundRefreshStatusDidChange;	// IMP=0x0000000100016320
- (int)_backgroundRefreshStatus;	// IMP=0x0000000100016310
- (_Bool)_queue_canAddAssertion:(id)arg1;	// IMP=0x0000000100015ab8
- (_Bool)_queue_canAcquireAssertion:(id)arg1 forProcess:(id)arg2;	// IMP=0x0000000100015780
- (_Bool)_queue_setPriority:(int)arg1 ofResource:(int)arg2;	// IMP=0x00000001000154b0
- (_Bool)_queue_assertionShouldReallyPreventIdleSleep:(id)arg1;	// IMP=0x00000001000153e0
- (void)_queue_cancelTaskCompletionAllowIdleSleep;	// IMP=0x00000001000152f0
- (void)_queue_scheduleTaskCompletionAllowIdleSleepIfNeeded;	// IMP=0x0000000100014f54
- (_Bool)_queue_taskShutdownSockets:(int)arg1;	// IMP=0x0000000100014dbc
- (_Bool)_queue_taskResumeForReason:(unsigned int)arg1;	// IMP=0x0000000100014970
- (_Bool)_queue_taskSuspend;	// IMP=0x00000001000145f4
- (id)_lockedFilePathsIgnoringAllowed;	// IMP=0x000000010001415c
- (_Bool)_queue_resumeForReason:(unsigned int)arg1;	// IMP=0x0000000100014090
- (_Bool)_queue_suspend;	// IMP=0x000000010001400c
- (void)_queue_killWithSignal:(int)arg1;	// IMP=0x0000000100013e4c
- (void)_queue_markWatchdogCPUTimes;	// IMP=0x0000000100013df0
- (double)elapsedCPUTime;	// IMP=0x0000000100013ca0
- (_Bool)isBeingPtraced;	// IMP=0x0000000100013c78
- (_Bool)_isBeingDebugged;	// IMP=0x0000000100013c54
@property(readonly, nonatomic) _Bool isBeingDebugged;
@property(readonly, nonatomic, getter=isExtension) _Bool extension;
- (_Bool)isEligibleForReducedFinishTask;	// IMP=0x0000000100013c28
@property(readonly, nonatomic, getter=isSystemApp) _Bool systemApp;
@property(readonly, nonatomic, getter=isTheSystemApp) _Bool theSystemApp;
- (void)_queue_powerlogEvent:(int)arg1 withAssertion:(id)arg2;	// IMP=0x0000000100013914
- (void)_queue_updateRole;	// IMP=0x0000000100013734
- (void)_queue_updateCpumon;	// IMP=0x000000010001314c
- (void)_queue_updateLenientJetsam;	// IMP=0x0000000100012fc4
- (void)_queue_updateSecondaryAppMemLimit;	// IMP=0x0000000100012e24
- (void)_queue_updateRestrictedResourceMode;	// IMP=0x0000000100012e20
- (void)_queue_updateJetsamTaskLimit;	// IMP=0x0000000100012e1c
- (void)_getInitialMemlimit;	// IMP=0x0000000100012ca8
- (void)_queue_incrementKillCount;	// IMP=0x0000000100012ca4
- (void)_queue_updateTaskState;	// IMP=0x0000000100012a88
- (void)_queue_updatePriorityBand;	// IMP=0x000000010001284c
- (int)_queue_currentPriorityBand;	// IMP=0x00000001000125d4
- (int)_queue_foregroundPriorityBand;	// IMP=0x00000001000124f8
- (void)_queue_setTaskSuspended:(_Bool)arg1;	// IMP=0x000000010001247c
- (void)_queue_setVisibility:(long long)arg1;	// IMP=0x0000000100012258
- (void)_queue_setRunning:(_Bool)arg1;	// IMP=0x0000000100011f40
- (_Bool)_queue_isForeground;	// IMP=0x0000000100011ed0
- (void)terminateWithAssertion:(id)arg1;	// IMP=0x00000001000119fc
- (double)remainingAllowedAssertionDuration;	// IMP=0x00000001000118e0
- (void)_updateAssertionNeedsForAssertion:(id)arg1;	// IMP=0x000000010001186c
- (_Bool)hasAssertionForReason:(unsigned int)arg1;	// IMP=0x0000000100011780
- (id)activeAssertions;	// IMP=0x0000000100011628
- (id)allAssertions;	// IMP=0x00000001000114d0
- (void)invalidateAssertion:(id)arg1;	// IMP=0x000000010001145c
- (void)resumeAssertion:(id)arg1;	// IMP=0x00000001000113e8
- (void)suspendAssertion:(id)arg1;	// IMP=0x0000000100011374
- (void)updateAssertion:(id)arg1 withSynchronizationBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000001000112d8
- (void)_acquireAssertion:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000111bc
- (void)acquireAssertion:(id)arg1 forProcess:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100010d4c
@property(nonatomic, getter=isWorkspaceLocked) _Bool workspaceLocked; // @synthesize workspaceLocked=_workspaceLocked;
@property(nonatomic, getter=isReceivingPacketsFromAccessory) _Bool receivingPacketsFromAccessory; // @synthesize receivingPacketsFromAccessory=_receivingPacketsFromAccessory;
@property(nonatomic, getter=isNowPlayingWithAudio) _Bool nowPlayingWithAudio; // @synthesize nowPlayingWithAudio=_nowPlayingWithAudio;
@property(readonly, nonatomic) _Bool isForeground;
@property(nonatomic, getter=isSideApp) _Bool sideApp; // @synthesize sideApp=_sideApp;
@property(nonatomic, getter=isRecordingAudio) _Bool recordingAudio; // @synthesize recordingAudio=_recordingAudio;
@property(nonatomic, getter=isRunning) _Bool running; // @synthesize running=_running;
@property(readonly, nonatomic) long long taskState;
@property(readonly, nonatomic) __weak id <BKProcessDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setDelegate:(id)arg1;	// IMP=0x000000010001012c
- (void)workspaceConnectedWithTaskPortRight:(id)arg1;	// IMP=0x000000010000ffcc
- (void)invalidateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000f5f8
@property(readonly, nonatomic, getter=isInvalidated) _Bool invalidated; // @synthesize invalidated=_invalidated;
- (void)_initPriorityBand:(id)arg1;	// IMP=0x000000010000f118
- (id)debugDescriptionWithMultilinePrefix:(id)arg1;	// IMP=0x000000010000ef04
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;	// IMP=0x000000010000ed9c
- (id)descriptionWithMultilinePrefix:(id)arg1;	// IMP=0x000000010000ed78
- (id)succinctDescriptionBuilder;	// IMP=0x000000010000ecb0
- (id)succinctDescription;	// IMP=0x000000010000ec8c
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000010000e2e4
- (id)initWithProcessHandle:(id)arg1 agency:(long long)arg2 delegate:(id)arg3;	// IMP=0x000000010000dc2c
- (int)getFGJetsamPriorityBand;	// IMP=0x000000010000da20
- (id)getExtensionPoint;	// IMP=0x000000010000d8b8
- (id)getJetsamPropertyInfo;	// IMP=0x000000010000d3cc
- (id)copyJetsamPropertyDatabase;	// IMP=0x000000010000d08c

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

