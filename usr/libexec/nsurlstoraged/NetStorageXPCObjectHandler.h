//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Jun 10 2020 10:03:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NetworkStorageXPCProtocol-Protocol.h"

@class NSString, NSURLReadStorageTaskManager, NSURLWriteStorageTaskManager, NSXPCConnection;
@protocol OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface NetStorageXPCObjectHandler : NSObject <NetworkStorageXPCProtocol>
{
    NSURLReadStorageTaskManager *_readTaskManager;	// 8 = 0x8
    NSURLWriteStorageTaskManager *_writeTaskManager;	// 16 = 0x10
    NSXPCConnection *_xpcConnection;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_memoryPressureSource;	// 32 = 0x20
    unsigned long long _lastMemoryPressureEvent;	// 40 = 0x28
    double _idleTime;	// 48 = 0x30
    NSString *_clientBundleID;	// 56 = 0x38
}

+ (void)unlock;	// IMP=0x0000000100007ed4
+ (void)lock;	// IMP=0x0000000100007e7c
+ (id)_netStorageXPCObjectHandlerLock;	// IMP=0x0000000100007dfc
+ (void)touchIdleExitTimer;	// IMP=0x0000000100007c24
+ (void)_resetIdleExitTimer;	// IMP=0x0000000100007bcc
@property(retain, nonatomic) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property double idleTime; // @synthesize idleTime=_idleTime;
@property unsigned long long lastMemoryPressureEvent; // @synthesize lastMemoryPressureEvent=_lastMemoryPressureEvent;
@property(retain) NSObject<OS_dispatch_source> *memoryPressureSource; // @synthesize memoryPressureSource=_memoryPressureSource;
@property(readonly) __weak NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void).cxx_destruct;	// IMP=0x00000001000097d0
- (void)flushWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009568
- (void)totalBytesWrittenToDiskWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000094b0
- (void)performSchemaCheckAndUpdate;	// IMP=0x00000001000093e0
- (void)setMinSizeForVMCachedResource:(long long)arg1;	// IMP=0x0000000100009354
- (void)currentDiskUsageWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009264
- (void)setMaxSize:(long long)arg1;	// IMP=0x00000001000091d8
- (void)copyAllPartitionNamesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009070
- (void)copyAllHostNamesForOptionalPartition:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008ee4
- (void)deleteAllHostNames:(id)arg1 forOptionalPartition:(id)arg2;	// IMP=0x0000000100008df4
- (void)deleteResponsesSinceDate:(id)arg1;	// IMP=0x0000000100008d28
- (void)deleteAllResponses;	// IMP=0x0000000100008c4c
- (void)deleteResponseForRequestWithKey:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008ad4
- (void)addCachedResponseWithDictionary:(id)arg1 key:(id)arg2;	// IMP=0x00000001000087ac
- (void)createStorageTaskManagerForPath:(id)arg1 maxSize:(long long)arg2 extension:(id)arg3;	// IMP=0x00000001000083fc
- (void)setupMemoryPressureHandler;	// IMP=0x0000000100008164
- (void)touchTimers;	// IMP=0x00000001000080e0
- (void)cleanupTaskManagers;	// IMP=0x000000010000806c
- (void)dealloc;	// IMP=0x0000000100007fdc
- (id)initWithConnection:(id)arg1;	// IMP=0x0000000100007f2c

@end

