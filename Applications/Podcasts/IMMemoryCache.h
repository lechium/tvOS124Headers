//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString;

@interface IMMemoryCache : NSObject
{
    _Bool _evictsItemsWithDiscardedContent;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    id _delegate;	// 24 = 0x18
    unsigned long long _totalCostLimit;	// 32 = 0x20
    unsigned long long _countLimit;	// 40 = 0x28
    NSMutableArray *_itemsArray;	// 48 = 0x30
    NSMutableDictionary *_items;	// 56 = 0x38
    unsigned long long _totalCost;	// 64 = 0x40
    unsigned long long _count;	// 72 = 0x48
    NSOperationQueue *_queue;	// 80 = 0x50
    double _lastCheckTime;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_accessQueue;	// 96 = 0x60
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(nonatomic) double lastCheckTime; // @synthesize lastCheckTime=_lastCheckTime;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) unsigned long long totalCost; // @synthesize totalCost=_totalCost;
@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
@property(retain, nonatomic) NSMutableArray *itemsArray; // @synthesize itemsArray=_itemsArray;
@property(nonatomic) unsigned long long countLimit; // @synthesize countLimit=_countLimit;
@property(nonatomic) unsigned long long totalCostLimit; // @synthesize totalCostLimit=_totalCostLimit;
@property(nonatomic) _Bool evictsItemsWithDiscardedContent; // @synthesize evictsItemsWithDiscardedContent=_evictsItemsWithDiscardedContent;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;	// IMP=0x00000001001adc78
- (void)_removeObjectForKey:(id)arg1;	// IMP=0x00000001001ad904
- (void)_addItem:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001001ad6b0
- (id)description;	// IMP=0x00000001001ad45c
- (long long)numberOfCachedItems;	// IMP=0x00000001001ad374
- (unsigned long long)costForObjectWithKey:(id)arg1;	// IMP=0x00000001001ad20c
- (void)_checkLimits;	// IMP=0x00000001001ad11c
- (void)_checkLimitsAndEvictObjects;	// IMP=0x00000001001acf54
- (void)checkLimitsAndEvictObjects;	// IMP=0x00000001001acee4
- (_Bool)_shouldRemoveIndex:(unsigned long long)arg1;	// IMP=0x00000001001acce8
- (void)removeObjectsForKeyWithPrefix:(id)arg1;	// IMP=0x00000001001ac9f0
- (void)removeAllObjects;	// IMP=0x00000001001ac8e8
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000001001ac838
- (void)setObject:(id)arg1 forKey:(id)arg2 cost:(unsigned long long)arg3;	// IMP=0x00000001001ac6d0
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001001ac574
- (id)objectForKey:(id)arg1;	// IMP=0x00000001001ac140
- (id)allKeys;	// IMP=0x00000001001abfdc
- (id)init;	// IMP=0x00000001001abea8

@end

