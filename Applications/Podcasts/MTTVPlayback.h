//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TVPAVFPlayback.h"
#import "TVPPlayback.h"

@class AVPlayer, IMAVPlayer, NSArray, NSDate, NSHashTable, NSMutableDictionary, NSNumber, NSObject<TVPMediaItem>, NSString, TVPAudioOption, TVPChapter, TVPChapterCollection, TVPDateRange, TVPInterstitial, TVPPlaybackState, TVPPlaylist, TVPSubtitleOption, TVPTimeRange;

@interface MTTVPlayback : NSObject <TVPPlayback, TVPAVFPlayback>
{
    _Bool _currentMediaItemHasDates;	// 8 = 0x8
    _Bool _currentMediaItemPreparedForLoading;	// 9 = 0x9
    _Bool _interactive;	// 10 = 0xa
    _Bool _isLive;	// 11 = 0xb
    _Bool _muted;	// 12 = 0xc
    _Bool _preventsSleepDuringVideoPlayback;	// 13 = 0xd
    _Bool _updatesMediaRemoteInfoAutomatically;	// 14 = 0xe
    _Bool _waitsAfterPreparingMediaItems;	// 15 = 0xf
    _Bool _videoViewsNeedPlayerUpdate;	// 16 = 0x10
    float _volume;	// 20 = 0x14
    id <TVPASyncPlaybackDelegate> _asyncDelegate;	// 24 = 0x18
    NSArray *_audioOptions;	// 32 = 0x20
    NSArray *_chapterCollections;	// 40 = 0x28
    TVPChapter *_currentChapter;	// 48 = 0x30
    TVPChapterCollection *_currentChapterCollection;	// 56 = 0x38
    TVPInterstitial *_currentInterstitial;	// 64 = 0x40
    NSObject<TVPMediaItem> *_currentMediaItem;	// 72 = 0x48
    NSString *_debugDescription;	// 80 = 0x50
    id <TVPPlaybackDelegate> _delegate;	// 88 = 0x58
    NSString *_description;	// 96 = 0x60
    double _elapsedTime;	// 104 = 0x68
    long long _errorBehavior;	// 112 = 0x70
    double _forwardPlaybackEndTime;	// 120 = 0x78
    double _maximumBitRate;	// 128 = 0x80
    long long _mediaItemEndAction;	// 136 = 0x88
    NSString *_name;	// 144 = 0x90
    NSDate *_playbackDate;	// 152 = 0x98
    IMAVPlayer *_player;	// 160 = 0xa0
    TVPPlaylist *_playlist;	// 168 = 0xa8
    double _rate;	// 176 = 0xb0
    double _rateUsedForPlayback;	// 184 = 0xb8
    double _reversePlaybackEndTime;	// 192 = 0xc0
    TVPDateRange *_seekableDateRange;	// 200 = 0xc8
    TVPTimeRange *_seekableTimeRange;	// 208 = 0xd0
    TVPAudioOption *_selectedAudioOption;	// 216 = 0xd8
    TVPSubtitleOption *_selectedSubtitleOption;	// 224 = 0xe0
    TVPPlaybackState *_state;	// 232 = 0xe8
    NSArray *_subtitleOptions;	// 240 = 0xf0
    NSMutableDictionary *_timeObservers;	// 248 = 0xf8
    NSNumber *_temporarySubtitleOverrideType;	// 256 = 0x100
    TVPPlaybackState *_oldPlaybackState;	// 264 = 0x108
    NSHashTable *_videoViewWeakReferences;	// 272 = 0x110
    struct CGSize _currentMediaItemPresentationSize;	// 280 = 0x118
}

@property(nonatomic) _Bool videoViewsNeedPlayerUpdate; // @synthesize videoViewsNeedPlayerUpdate=_videoViewsNeedPlayerUpdate;
@property(retain, nonatomic) NSHashTable *videoViewWeakReferences; // @synthesize videoViewWeakReferences=_videoViewWeakReferences;
@property(retain, nonatomic) TVPPlaybackState *oldPlaybackState; // @synthesize oldPlaybackState=_oldPlaybackState;
@property(retain, nonatomic) NSNumber *temporarySubtitleOverrideType; // @synthesize temporarySubtitleOverrideType=_temporarySubtitleOverrideType;
@property(nonatomic) _Bool waitsAfterPreparingMediaItems; // @synthesize waitsAfterPreparingMediaItems=_waitsAfterPreparingMediaItems;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) _Bool updatesMediaRemoteInfoAutomatically; // @synthesize updatesMediaRemoteInfoAutomatically=_updatesMediaRemoteInfoAutomatically;
@property(retain, nonatomic) NSMutableDictionary *timeObservers; // @synthesize timeObservers=_timeObservers;
@property(retain, nonatomic) TVPAudioOption *selectedAudioOption; // @synthesize selectedAudioOption=_selectedAudioOption;
@property(readonly, nonatomic) TVPTimeRange *seekableTimeRange; // @synthesize seekableTimeRange=_seekableTimeRange;
@property(readonly, nonatomic) TVPDateRange *seekableDateRange; // @synthesize seekableDateRange=_seekableDateRange;
@property(readonly, nonatomic) double reversePlaybackEndTime; // @synthesize reversePlaybackEndTime=_reversePlaybackEndTime;
@property(nonatomic) double rateUsedForPlayback; // @synthesize rateUsedForPlayback=_rateUsedForPlayback;
@property(nonatomic) _Bool preventsSleepDuringVideoPlayback; // @synthesize preventsSleepDuringVideoPlayback=_preventsSleepDuringVideoPlayback;
@property(retain, nonatomic) TVPPlaylist *playlist; // @synthesize playlist=_playlist;
@property(readonly, nonatomic) IMAVPlayer *player; // @synthesize player=_player;
@property(copy, nonatomic) NSDate *playbackDate; // @synthesize playbackDate=_playbackDate;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) long long mediaItemEndAction; // @synthesize mediaItemEndAction=_mediaItemEndAction;
@property(nonatomic) double maximumBitRate; // @synthesize maximumBitRate=_maximumBitRate;
@property(readonly, nonatomic) _Bool isLive; // @synthesize isLive=_isLive;
@property(nonatomic) _Bool interactive; // @synthesize interactive=_interactive;
@property(readonly, nonatomic) double forwardPlaybackEndTime; // @synthesize forwardPlaybackEndTime=_forwardPlaybackEndTime;
@property(nonatomic) long long errorBehavior; // @synthesize errorBehavior=_errorBehavior;
@property(readonly, copy) NSString *description; // @synthesize description=_description;
@property(nonatomic) __weak id <TVPPlaybackDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSString *debugDescription; // @synthesize debugDescription=_debugDescription;
@property(readonly, nonatomic) struct CGSize currentMediaItemPresentationSize; // @synthesize currentMediaItemPresentationSize=_currentMediaItemPresentationSize;
@property(readonly, nonatomic) _Bool currentMediaItemPreparedForLoading; // @synthesize currentMediaItemPreparedForLoading=_currentMediaItemPreparedForLoading;
@property(readonly, nonatomic) _Bool currentMediaItemHasDates; // @synthesize currentMediaItemHasDates=_currentMediaItemHasDates;
@property(retain, nonatomic) NSObject<TVPMediaItem> *currentMediaItem; // @synthesize currentMediaItem=_currentMediaItem;
@property(readonly, nonatomic) TVPInterstitial *currentInterstitial; // @synthesize currentInterstitial=_currentInterstitial;
@property(retain, nonatomic) TVPChapterCollection *currentChapterCollection; // @synthesize currentChapterCollection=_currentChapterCollection;
@property(readonly, nonatomic) TVPChapter *currentChapter; // @synthesize currentChapter=_currentChapter;
@property(readonly, nonatomic) NSArray *chapterCollections; // @synthesize chapterCollections=_chapterCollections;
@property(readonly, nonatomic) NSArray *audioOptions; // @synthesize audioOptions=_audioOptions;
@property(nonatomic) __weak id <TVPASyncPlaybackDelegate> asyncDelegate; // @synthesize asyncDelegate=_asyncDelegate;
- (void).cxx_destruct;	// IMP=0x000000010009a0e8
- (void)continueLoadingCurrentItem;	// IMP=0x0000000100099d1c
- (void)_setSelectedSubtitleOption:(id)arg1 userOverridesSystemSubtitleSettings:(_Bool)arg2;	// IMP=0x000000010009979c
@property(retain, nonatomic) TVPSubtitleOption *selectedSubtitleOption; // @synthesize selectedSubtitleOption=_selectedSubtitleOption;
- (void)setSelectedSubtitleOption:(id)arg1 setGlobalPreference:(_Bool)arg2;	// IMP=0x0000000100099780
- (id)fetchSubtitleOptions;	// IMP=0x000000010009921c
@property(readonly, nonatomic) NSArray *subtitleOptions; // @synthesize subtitleOptions=_subtitleOptions;
- (void)updateSubtitleOptionsAndSelection;	// IMP=0x0000000100099170
- (void)updateSubtitleOptions;	// IMP=0x00000001000990fc
- (void)beginLoadingSubtitleOptions;	// IMP=0x0000000100098df0
- (void)postPlaybackStateChangeNotificationWithOldState:(id)arg1;	// IMP=0x0000000100098cb4
- (id)currentPlayingItem;	// IMP=0x0000000100098c60
- (id)playerController;	// IMP=0x0000000100098c4c
- (id)manifest;	// IMP=0x0000000100098bf8
@property(readonly, nonatomic) AVPlayer *avPlayer;
@property(readonly, nonatomic) _Bool currentMediaItemHasVideoContent;
@property(readonly, nonatomic) _Bool currentMediaItemIsStreaming;
@property(readonly, nonatomic) _Bool currentMediaItemInitialLoadingComplete;
- (void)removeWeakReferenceToVideoView:(id)arg1;	// IMP=0x0000000100098ad0
- (void)addWeakReferenceToVideoView:(id)arg1;	// IMP=0x0000000100098ab0
- (void)_updateVideoViewsWithAVPlayer:(id)arg1;	// IMP=0x0000000100098870
- (void)setCurrentMediaItemPresentationSize:(struct CGSize)arg1;	// IMP=0x00000001000987e0
- (_Bool)currentMediaItemSupportsScrubbingUsingPlayer;	// IMP=0x00000001000987d8
@property(nonatomic) _Bool limitReadAhead;
@property(readonly, nonatomic) TVPTimeRange *bufferedTimeRange;
@property(readonly, nonatomic) TVPPlaybackState *state; // @synthesize state=_state;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
- (void)setElapsedTime:(double)arg1;	// IMP=0x00000001000983a4
- (void)setElapsedTime:(double)arg1 precise:(_Bool)arg2;	// IMP=0x0000000100098398
- (void)setElapsedTime:(double)arg1 seekPrecision:(CDStruct_1b6d18a9)arg2;	// IMP=0x000000010009838c
- (void)setElapsedTime:(double)arg1 seekPrecision:(CDStruct_1b6d18a9)arg2 ignoreDelegate:(_Bool)arg3;	// IMP=0x0000000100098380
- (void)removeElapsedTimeObserverWithToken:(id)arg1;	// IMP=0x0000000100098314
- (void)removeBoundaryTimeObserverWithToken:(id)arg1;	// IMP=0x0000000100098310
- (id)addBoundaryTimeObserverForTimes:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100098308
- (id)addBoundaryTimeObserverForDates:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100098300
- (id)addElapsedTimeObserver:(CDUnknownBlockType)arg1;	// IMP=0x0000000100098220
@property(readonly, nonatomic) double rate; // @synthesize rate=_rate;
- (void)scanWithRate:(double)arg1;	// IMP=0x000000010009810c
- (void)changeMediaInDirection:(long long)arg1;	// IMP=0x000000010009803c
- (void)changeMediaInDirection:(long long)arg1 reason:(id)arg2;	// IMP=0x0000000100098030
- (void)stopWithVolumeRampDuration:(double)arg1;	// IMP=0x0000000100098024
- (void)pauseWithVolumeRampDuration:(double)arg1;	// IMP=0x0000000100098018
- (void)skipToNextChapterInDirection:(long long)arg1;	// IMP=0x0000000100097f9c
- (void)stop;	// IMP=0x0000000100097f5c
- (void)pauseIgnoringDelegate:(_Bool)arg1;	// IMP=0x0000000100097f50
- (void)pause;	// IMP=0x0000000100097f10
- (void)togglePlayPause;	// IMP=0x0000000100097ed0
- (void)playIgnoringDelegate:(_Bool)arg1;	// IMP=0x0000000100097ec4
- (void)play;	// IMP=0x0000000100097e84
- (void)_updatePlaylist;	// IMP=0x0000000100097d70
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100097cf8
- (void)_subtitleSettingsDidChange;	// IMP=0x0000000100097c9c
- (void)_durationAvailable;	// IMP=0x0000000100097c58
- (void)_mediaServicesDidReset;	// IMP=0x0000000100097bcc
- (void)_mediaServicesWillReset;	// IMP=0x0000000100097bb8
- (void)_loadedDurationDidChange;	// IMP=0x0000000100097b74
- (void)_mediaItemPresentationSizeDidChange;	// IMP=0x0000000100097af8
- (void)_rateDidChange;	// IMP=0x0000000100097ae8
- (void)_mediaItemStatusDidChange;	// IMP=0x0000000100097adc
- (void)_readyToPlay;	// IMP=0x0000000100097a74
- (void)_periodicUpdate;	// IMP=0x000000010009789c
- (void)_manifestDidChange;	// IMP=0x0000000100097890
- (void)_stateDidChange;	// IMP=0x0000000100097800
- (void)_stateWillChange;	// IMP=0x00000001000977b4
- (void)_mediaItemDidChange;	// IMP=0x0000000100097658
- (void)_mediaItemWillChange;	// IMP=0x00000001000975ac
- (void)invalidate;	// IMP=0x00000001000975a8
- (void)dealloc;	// IMP=0x0000000100097480
- (id)initWithPlayer:(id)arg1;	// IMP=0x0000000100096c78
- (id)initWithName:(id)arg1;	// IMP=0x0000000100096c18

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

