/*
* This header is generated by classdump-dyld 1.0
* on Saturday, August 24, 2019 at 9:48:46 PM Mountain Standard Time
* Operating System: Version 12.4 (Build 16M568)
* Image Source: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreSpeech/CoreSpeech-Structs.h>
#import <libobjc.A.dylib/CSAudioConverterDelegate.h>
#import <libobjc.A.dylib/CSSpIdSpeakerRecognizerDelegate.h>
#import <libobjc.A.dylib/CSAudioRouteChangeMonitorDelegate.h>
#import <libobjc.A.dylib/CSVoiceTriggerDelegate.h>
#import <libobjc.A.dylib/CSSpeechManagerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_group, CSSpeechControllerDelegate, CSSpIdSpeakerRecognizer;
@class NSObject, CSAudioConverter, CSAudioSampleRateConverter, NSDictionary, CSAudioZeroCounter, CSEndpointerProxy, CSSpeechManager, CSPlainAudioFileWriter, CSSpeakerIdRecognizerFactory, CSSpIdImplicitTraining, CSSpeechEndHostTimeEstimator, NSString;

@interface CSSpeechController : NSObject <CSAudioConverterDelegate, CSSpIdSpeakerRecognizerDelegate, CSAudioRouteChangeMonitorDelegate, CSVoiceTriggerDelegate, CSSpeechManagerDelegate> {

	NSObject*<OS_dispatch_queue> _queue;
	CSAudioConverter* _opusAudioConverter;
	CSAudioConverter* _narrowBandOpusConverter;
	CSAudioConverter* _audioConverter;
	CSAudioSampleRateConverter* _downsampler;
	NSDictionary* _requestedRecordSettings;
	NSDictionary* _lastVoiceTriggerInfo;
	CSAudioZeroCounter* _continuousZeroCounter;
	NSObject*<OS_dispatch_queue> _audibleFeedbackQueue;
	NSObject*<OS_dispatch_group> _twoShotAudibleFeedbackDecisionGroup;
	BOOL _isOpus;
	BOOL _isActivated;
	BOOL _isNarrowBand;
	BOOL _twoShotNotificationEnabled;
	BOOL _isMediaPlaying;
	BOOL _isAlarmPlaying;
	BOOL _isTimerPlaying;
	BOOL _isSoundPlaying;
	BOOL _isRemoteVADAvailableStream;
	BOOL _myriadPreventingTwoShotFeedback;
	BOOL _needsPostGain;
	id<CSSpeechControllerDelegate> _delegate;
	CSEndpointerProxy* _endpointerProxy;
	CSSpeechManager* _speechManager;
	NSDictionary* _avvcContext;
	CSPlainAudioFileWriter* _audioFileWriter;
	CSSpeakerIdRecognizerFactory* _spIdFactory;
	id<CSSpIdSpeakerRecognizer> _spIdRecognizer;
	CSSpIdImplicitTraining* _voiceTriggerImplicitTraining;
	NSDictionary* _spIdUserScores;
	unsigned long long _activeChannel;
	CSSpeechEndHostTimeEstimator* _speechEndHostTimeEstimator;

}

@property (nonatomic,retain) CSEndpointerProxy * endpointerProxy;                                    //@synthesize endpointerProxy=_endpointerProxy - In the implementation block
@property (assign,nonatomic,__weak) CSSpeechManager * speechManager;                                 //@synthesize speechManager=_speechManager - In the implementation block
@property (nonatomic,retain) NSDictionary * avvcContext;                                             //@synthesize avvcContext=_avvcContext - In the implementation block
@property (assign,nonatomic) BOOL isOpus;                                                            //@synthesize isOpus=_isOpus - In the implementation block
@property (assign,nonatomic) BOOL isActivated;                                                       //@synthesize isActivated=_isActivated - In the implementation block
@property (assign,nonatomic) BOOL isNarrowBand;                                                      //@synthesize isNarrowBand=_isNarrowBand - In the implementation block
@property (nonatomic,retain) CSPlainAudioFileWriter * audioFileWriter;                               //@synthesize audioFileWriter=_audioFileWriter - In the implementation block
@property (nonatomic,retain) CSSpeakerIdRecognizerFactory * spIdFactory;                             //@synthesize spIdFactory=_spIdFactory - In the implementation block
@property (nonatomic,retain) id<CSSpIdSpeakerRecognizer> spIdRecognizer;                             //@synthesize spIdRecognizer=_spIdRecognizer - In the implementation block
@property (nonatomic,retain) CSSpIdImplicitTraining * voiceTriggerImplicitTraining;                  //@synthesize voiceTriggerImplicitTraining=_voiceTriggerImplicitTraining - In the implementation block
@property (nonatomic,retain) NSDictionary * spIdUserScores;                                          //@synthesize spIdUserScores=_spIdUserScores - In the implementation block
@property (assign,nonatomic) unsigned long long activeChannel;                                       //@synthesize activeChannel=_activeChannel - In the implementation block
@property (assign,nonatomic) BOOL twoShotNotificationEnabled;                                        //@synthesize twoShotNotificationEnabled=_twoShotNotificationEnabled - In the implementation block
@property (assign,nonatomic) BOOL isMediaPlaying;                                                    //@synthesize isMediaPlaying=_isMediaPlaying - In the implementation block
@property (assign,nonatomic) BOOL isAlarmPlaying;                                                    //@synthesize isAlarmPlaying=_isAlarmPlaying - In the implementation block
@property (assign,nonatomic) BOOL isTimerPlaying;                                                    //@synthesize isTimerPlaying=_isTimerPlaying - In the implementation block
@property (assign,nonatomic) BOOL isSoundPlaying;                                                    //@synthesize isSoundPlaying=_isSoundPlaying - In the implementation block
@property (assign,nonatomic) BOOL isRemoteVADAvailableStream;                                        //@synthesize isRemoteVADAvailableStream=_isRemoteVADAvailableStream - In the implementation block
@property (assign,nonatomic) BOOL myriadPreventingTwoShotFeedback;                                   //@synthesize myriadPreventingTwoShotFeedback=_myriadPreventingTwoShotFeedback - In the implementation block
@property (assign,nonatomic) BOOL needsPostGain;                                                     //@synthesize needsPostGain=_needsPostGain - In the implementation block
@property (nonatomic,retain) CSSpeechEndHostTimeEstimator * speechEndHostTimeEstimator;              //@synthesize speechEndHostTimeEstimator=_speechEndHostTimeEstimator - In the implementation block
@property (assign,nonatomic,__weak) id<CSSpeechControllerDelegate> delegate;                         //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL duckOthersOption; 
@property (nonatomic,readonly) id<CSEndpointAnalyzer> endpointAnalyzer; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isSmartSiriVolumeAvailable;
+(id)sharedController;
-(BOOL)isRecording;
-(void)stopRecording;
-(id)initWithManager:(id)arg1 ;
-(double)lastEndOfVoiceActivityTime;
-(id)recordRoute;
-(void)CSMediaPlayingMonitor:(id)arg1 didReceiveMediaPlayingChanged:(long long)arg2 ;
-(NSDictionary *)avvcContext;
-(void)CSAlarmMonitor:(id)arg1 didReceiveAlarmChanged:(long long)arg2 ;
-(void)CSTimerMonitor:(id)arg1 didReceiveTimerChanged:(long long)arg2 ;
-(void)speechManagerRecordBufferAvailable:(id)arg1 buffer:(id)arg2 ;
-(void)speechManagerLPCMRecordBufferAvailable:(id)arg1 chunk:(id)arg2 ;
-(void)speechManagerDidStartForwarding:(id)arg1 successfully:(BOOL)arg2 error:(id)arg3 ;
-(void)speechManagerDidStopForwarding:(id)arg1 forReason:(long long)arg2 ;
-(id)speechManagerRecordingContext;
-(void)speechManagerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(long long)arg2 ;
-(void)speechManagerDetectedSystemVolumeChange:(id)arg1 withVolume:(float)arg2 forReason:(unsigned long long)arg3 ;
-(void)speechManagerDidFinishAlertPlayback:(id)arg1 ofType:(long long)arg2 error:(id)arg3 ;
-(void)speechManagerBeginRecordInterruption:(id)arg1 ;
-(void)speechManagerBeginRecordInterruption:(id)arg1 withContext:(id)arg2 ;
-(void)speechManagerEndRecordInterruption:(id)arg1 ;
-(void)speechManager:(id)arg1 willSetAudioSessionActive:(BOOL)arg2 ;
-(void)speechManager:(id)arg1 didSetAudioSessionActive:(BOOL)arg2 ;
-(void)voiceTriggerDidDetectKeyword:(id)arg1 deviceId:(id)arg2 ;
-(void)voiceTriggerDidDetectTwoShotAtTime:(double)arg1 ;
-(void)keywordDetectorDidDetectKeyword;
-(BOOL)setRecordBufferDuration:(double)arg1 ;
-(void)setActiveChannel:(unsigned long long)arg1 ;
-(BOOL)isRTSTriggered;
-(BOOL)isHearstVoiceTriggered;
-(CSSpeechManager *)speechManager;
-(void)setSpeechManager:(CSSpeechManager *)arg1 ;
-(unsigned long long)activeChannel;
-(id<CSEndpointAnalyzer>)endpointAnalyzer;
-(CSPlainAudioFileWriter *)audioFileWriter;
-(void)setAudioFileWriter:(CSPlainAudioFileWriter *)arg1 ;
-(void)releaseAudioSession;
-(void)speakerRecognizer:(id)arg1 hasSpeakerIdInfo:(id)arg2 ;
-(void)speakerRecognizerFinishedProcessing:(id)arg1 withFinalSpeakerIdInfo:(id)arg2 ;
-(BOOL)setCurrentContext:(id)arg1 error:(id*)arg2 ;
-(BOOL)prepareRecordWithSettings:(id)arg1 error:(id*)arg2 ;
-(void)prewarmAudioSession;
-(id)recordDeviceInfo;
-(id)recordSettings;
-(BOOL)isNarrowBand;
-(BOOL)startRecordingWithSettings:(id)arg1 error:(id*)arg2 ;
-(void)releaseAudioSession:(unsigned long long)arg1 ;
-(id)voiceTriggerInfo;
-(void)CSAudioRouteChangeMonitor:(id)arg1 didReceiveAudioRouteChangeEvent:(long long)arg2 ;
-(void)updateMeters;
-(void)startController;
-(BOOL)twoShotNotificationEnabled;
-(long long)_currentAudioRecorderSampleRate;
-(void)_initializeMediaPlayingState;
-(void)_initializeAlarmState;
-(void)_initializeTimerState;
-(void)_setSoundPlayingState;
-(id)_contextToString:(id)arg1 ;
-(id)_getRecordSettings;
-(BOOL)_isHearstVoiceTriggered;
-(BOOL)_isHearstDoubleTap;
-(void)_setupDownsamplerIfNeeded;
-(BOOL)_setupAudioConverter:(BOOL)arg1 ;
-(BOOL)duckOthersOption;
-(void)setDuckOthersOption:(BOOL)arg1 ;
-(BOOL)_isVoiceTriggered;
-(BOOL)_isSpeakerIdTrainingTriggered;
-(BOOL)_shouldSetStartSampleCount;
-(BOOL)_isJarvisVoiceTriggered;
-(BOOL)_isAutoPrompted;
-(void)_setupSpeakerId;
-(BOOL)_canPlayPhaticDuringMediaPlayback;
-(BOOL)_shouldSchedulePhaticAtStartRecording;
-(float)_scheduledPhaticDelay;
-(unsigned long long)_phaticPlaybackReason;
-(BOOL)_shouldEstimateSpeechEndHosttime;
-(void)_deviceAudioLogging;
-(BOOL)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2 ;
-(BOOL)playAlertSoundForType:(long long)arg1 ;
-(unsigned long long)alertStartTime;
-(BOOL)playRecordStartingAlertAndResetEndpointer;
-(void)setMeteringEnabled:(BOOL)arg1 ;
-(float)peakPowerForChannel:(unsigned long long)arg1 ;
-(float)averagePowerForChannel:(unsigned long long)arg1 ;
-(void)processServerEndpointFeatures:(id)arg1 ;
-(id)_getSpeechIdentifier;
-(BOOL)_isJarvisButtonPress;
-(id)endpointerModelVersion;
-(void)updateEndpointerThreshold:(float)arg1 ;
-(void)updateEndpointerDelayedTrigger:(BOOL)arg1 ;
-(void)shouldAcceptEagerResultForDuration:(double)arg1 resultsCompletionHandler:(/*^block*/id)arg2 ;
-(BOOL)isSmartSiriVolumeAvailable;
-(void)audioConverterDidConvertPackets:(id)arg1 packets:(id)arg2 durationInSec:(float)arg3 timestamp:(unsigned long long)arg4 ;
-(BOOL)initializeRecordSessionWithContext:(id)arg1 ;
-(void)resetAudioSession;
-(AudioStreamBasicDescription)getLPCMAudioStreamBasicDescription;
-(void)setSynchronousCallbackEnabled:(BOOL)arg1 ;
-(double)getRecordBufferDuration;
-(BOOL)startRecording:(id*)arg1 ;
-(BOOL)isVoiceTriggered;
-(BOOL)isJarvisVoiceTriggered;
-(float)peakPowerForOutputReference;
-(float)averagePowerForOutputReference;
-(unsigned long long)outputReferenceChannel;
-(void)setEndpointAnalyzerDelegate:(id)arg1 ;
-(void)resetEndpointer;
-(float)getSmartSiriVolume;
-(void)beginWaitingForMyriad;
-(void)endWaitingForMyriadWithDecision:(unsigned long long)arg1 ;
-(CSEndpointerProxy *)endpointerProxy;
-(void)setEndpointerProxy:(CSEndpointerProxy *)arg1 ;
-(void)setAvvcContext:(NSDictionary *)arg1 ;
-(BOOL)isOpus;
-(void)setIsOpus:(BOOL)arg1 ;
-(void)setIsActivated:(BOOL)arg1 ;
-(void)setIsNarrowBand:(BOOL)arg1 ;
-(CSSpeakerIdRecognizerFactory *)spIdFactory;
-(void)setSpIdFactory:(CSSpeakerIdRecognizerFactory *)arg1 ;
-(id<CSSpIdSpeakerRecognizer>)spIdRecognizer;
-(void)setSpIdRecognizer:(id<CSSpIdSpeakerRecognizer>)arg1 ;
-(CSSpIdImplicitTraining *)voiceTriggerImplicitTraining;
-(void)setVoiceTriggerImplicitTraining:(CSSpIdImplicitTraining *)arg1 ;
-(NSDictionary *)spIdUserScores;
-(void)setSpIdUserScores:(NSDictionary *)arg1 ;
-(void)setTwoShotNotificationEnabled:(BOOL)arg1 ;
-(BOOL)isMediaPlaying;
-(void)setIsMediaPlaying:(BOOL)arg1 ;
-(BOOL)isAlarmPlaying;
-(void)setIsAlarmPlaying:(BOOL)arg1 ;
-(BOOL)isTimerPlaying;
-(void)setIsTimerPlaying:(BOOL)arg1 ;
-(BOOL)isSoundPlaying;
-(void)setIsSoundPlaying:(BOOL)arg1 ;
-(BOOL)isRemoteVADAvailableStream;
-(void)setIsRemoteVADAvailableStream:(BOOL)arg1 ;
-(BOOL)myriadPreventingTwoShotFeedback;
-(void)setMyriadPreventingTwoShotFeedback:(BOOL)arg1 ;
-(BOOL)needsPostGain;
-(void)setNeedsPostGain:(BOOL)arg1 ;
-(CSSpeechEndHostTimeEstimator *)speechEndHostTimeEstimator;
-(void)setSpeechEndHostTimeEstimator:(CSSpeechEndHostTimeEstimator *)arg1 ;
-(BOOL)isActivated;
-(void)setDelegate:(id<CSSpeechControllerDelegate>)arg1 ;
-(id<CSSpeechControllerDelegate>)delegate;
-(void)reset;
-(id)metrics;
-(void)preheat;
@end

