/*
* This header is generated by classdump-dyld 1.0
* on Saturday, August 24, 2019 at 9:50:06 PM Mountain Standard Time
* Operating System: Version 12.4 (Build 16M568)
* Image Source: /System/Library/PrivateFrameworks/PineBoardServices.framework/PineBoardServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CoreControlDelegate.h>

@protocol PBSExternalControlSystemDelegate, OS_dispatch_queue;
@class PBSIRVolumeButtonConfiguration, NSString, CoreControl, CoreControlHeldChord, NSObject, NSTimer, NSMutableArray, NSUUID;

@interface PBSExternalControlSystem : NSObject <CoreControlDelegate> {

	BOOL _isActiveSource;
	BOOL _isAppleIRRemotePaired;
	BOOL _needToUpdateCachedState;
	unsigned _noIdleAssertionID;
	int _actionBeingLearned;
	int _deviceTypeBeingLearned;
	int _lastProgrammedVolumePolicy;
	int _lastProgrammedMutePolicy;
	id<PBSExternalControlSystemDelegate> _delegate;
	PBSIRVolumeButtonConfiguration* _selectedVolumeButtonConfiguration;
	NSString* _volumeDeviceName;
	PBSIRVolumeButtonConfiguration* _effectiveVolumeButtonConfiguration;
	CoreControl* _coreControl;
	CoreControlHeldChord* _shortVolumeUpHeldChord;
	CoreControlHeldChord* _shortVolumeDownHeldChord;
	id _domainObserver;
	NSObject*<OS_dispatch_queue> _coreControlQueue;
	NSObject*<OS_dispatch_queue> _serialActionQueue;
	long long _noIdleAssertionRefCount;
	id _coreControlPrefsObserver;
	NSTimer* _rapidCECVolumeButtonReleaseTimer;
	NSTimer* _rapidDelegateVolumeButtonReleaseTimer;
	NSTimer* _delegateVolumeRepeatTimer;
	NSMutableArray* _queuedActions;
	NSUUID* _lastProgrammedVolumeConfiguration;
	NSUUID* _lastProgrammedMuteConfiguration;
	NSString* _lastProgrammedRemoteIDStr;
	NSMutableArray* _learnedIRConfigurations;
	long long _lastVolumeButtonsEnabledState;
	long long _pendingVolumeUpReleaseEvents;
	long long _pendingVolumeDownReleaseEvents;
	long long _internalVolumeButtonBehavior;

}

@property (nonatomic,copy) NSString * volumeDeviceName;                                                        //@synthesize volumeDeviceName=_volumeDeviceName - In the implementation block
@property (assign,nonatomic) BOOL isActiveSource;                                                              //@synthesize isActiveSource=_isActiveSource - In the implementation block
@property (assign,nonatomic) BOOL isAppleIRRemotePaired;                                                       //@synthesize isAppleIRRemotePaired=_isAppleIRRemotePaired - In the implementation block
@property (nonatomic,retain) PBSIRVolumeButtonConfiguration * effectiveVolumeButtonConfiguration;              //@synthesize effectiveVolumeButtonConfiguration=_effectiveVolumeButtonConfiguration - In the implementation block
@property (assign,nonatomic) BOOL needToUpdateCachedState;                                                     //@synthesize needToUpdateCachedState=_needToUpdateCachedState - In the implementation block
@property (nonatomic,retain) CoreControl * coreControl;                                                        //@synthesize coreControl=_coreControl - In the implementation block
@property (nonatomic,retain) CoreControlHeldChord * shortVolumeUpHeldChord;                                    //@synthesize shortVolumeUpHeldChord=_shortVolumeUpHeldChord - In the implementation block
@property (nonatomic,retain) CoreControlHeldChord * shortVolumeDownHeldChord;                                  //@synthesize shortVolumeDownHeldChord=_shortVolumeDownHeldChord - In the implementation block
@property (nonatomic,retain) id domainObserver;                                                                //@synthesize domainObserver=_domainObserver - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> coreControlQueue;                                    //@synthesize coreControlQueue=_coreControlQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> serialActionQueue;                                   //@synthesize serialActionQueue=_serialActionQueue - In the implementation block
@property (assign,nonatomic) unsigned noIdleAssertionID;                                                       //@synthesize noIdleAssertionID=_noIdleAssertionID - In the implementation block
@property (assign,nonatomic) long long noIdleAssertionRefCount;                                                //@synthesize noIdleAssertionRefCount=_noIdleAssertionRefCount - In the implementation block
@property (nonatomic,retain) id coreControlPrefsObserver;                                                      //@synthesize coreControlPrefsObserver=_coreControlPrefsObserver - In the implementation block
@property (assign,nonatomic) int actionBeingLearned;                                                           //@synthesize actionBeingLearned=_actionBeingLearned - In the implementation block
@property (assign,nonatomic) int deviceTypeBeingLearned;                                                       //@synthesize deviceTypeBeingLearned=_deviceTypeBeingLearned - In the implementation block
@property (nonatomic,retain) NSTimer * rapidCECVolumeButtonReleaseTimer;                                       //@synthesize rapidCECVolumeButtonReleaseTimer=_rapidCECVolumeButtonReleaseTimer - In the implementation block
@property (nonatomic,retain) NSTimer * rapidDelegateVolumeButtonReleaseTimer;                                  //@synthesize rapidDelegateVolumeButtonReleaseTimer=_rapidDelegateVolumeButtonReleaseTimer - In the implementation block
@property (nonatomic,retain) NSTimer * delegateVolumeRepeatTimer;                                              //@synthesize delegateVolumeRepeatTimer=_delegateVolumeRepeatTimer - In the implementation block
@property (nonatomic,retain) NSMutableArray * queuedActions;                                                   //@synthesize queuedActions=_queuedActions - In the implementation block
@property (assign,nonatomic) int lastProgrammedVolumePolicy;                                                   //@synthesize lastProgrammedVolumePolicy=_lastProgrammedVolumePolicy - In the implementation block
@property (assign,nonatomic) int lastProgrammedMutePolicy;                                                     //@synthesize lastProgrammedMutePolicy=_lastProgrammedMutePolicy - In the implementation block
@property (nonatomic,retain) NSUUID * lastProgrammedVolumeConfiguration;                                       //@synthesize lastProgrammedVolumeConfiguration=_lastProgrammedVolumeConfiguration - In the implementation block
@property (nonatomic,retain) NSUUID * lastProgrammedMuteConfiguration;                                         //@synthesize lastProgrammedMuteConfiguration=_lastProgrammedMuteConfiguration - In the implementation block
@property (nonatomic,retain) NSString * lastProgrammedRemoteIDStr;                                             //@synthesize lastProgrammedRemoteIDStr=_lastProgrammedRemoteIDStr - In the implementation block
@property (nonatomic,retain) NSMutableArray * learnedIRConfigurations;                                         //@synthesize learnedIRConfigurations=_learnedIRConfigurations - In the implementation block
@property (assign,nonatomic) long long lastVolumeButtonsEnabledState;                                          //@synthesize lastVolumeButtonsEnabledState=_lastVolumeButtonsEnabledState - In the implementation block
@property (assign,nonatomic) long long pendingVolumeUpReleaseEvents;                                           //@synthesize pendingVolumeUpReleaseEvents=_pendingVolumeUpReleaseEvents - In the implementation block
@property (assign,nonatomic) long long pendingVolumeDownReleaseEvents;                                         //@synthesize pendingVolumeDownReleaseEvents=_pendingVolumeDownReleaseEvents - In the implementation block
@property (assign,nonatomic) long long internalVolumeButtonBehavior;                                           //@synthesize internalVolumeButtonBehavior=_internalVolumeButtonBehavior - In the implementation block
@property (assign,nonatomic,__weak) id<PBSExternalControlSystemDelegate> delegate;                             //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) PBSIRVolumeButtonConfiguration * selectedVolumeButtonConfiguration;                 //@synthesize selectedVolumeButtonConfiguration=_selectedVolumeButtonConfiguration - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedSystem;
-(void)updateFeature:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)cancelIRLearningWithCompletion:(/*^block*/id)arg1 ;
-(void)learnIRActionAsync:(int)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)startIRLearningForDeviceType:(int)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)commitIRLearningForDeviceWithUUID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_loadLastProgrammedVolumeAndMuteData;
-(void)_refreshAppleTVServicesPreferences;
-(void)_externalPreferencesChanged;
-(void)_SYNC_initializeCoreControlInstance;
-(void)_preventIdleSleep;
-(NSMutableArray *)queuedActions;
-(void)_allowIdleSleep;
-(CoreControl *)coreControl;
-(BOOL)isActiveSource;
-(void)_SYNC_updateCachedState;
-(BOOL)_isReadyForFeature:(id)arg1 ;
-(BOOL)_isConfiguredForFeature:(id)arg1 ;
-(int)_coreControlPolicyPreferenceForFeature:(id)arg1 ;
-(long long)_transportForFeature:(id)arg1 ;
-(BOOL)_SYNC_setCoreControlPolicyPreference:(int)arg1 forFeature:(id)arg2 ;
-(id)_stringFromExternalControlSystemAction:(long long)arg1 ;
-(BOOL)_isReadyForAction:(long long)arg1 ;
-(BOOL)_isConfiguredForAction:(long long)arg1 ;
-(long long)volumeButtonBehavior;
-(void)_handleDelegateVolumeAction:(long long)arg1 ;
-(void)_handleCECVolumeAction:(long long)arg1 ;
-(void)_setPower:(BOOL)arg1 ;
-(void)_sendActiveSourceAction:(int)arg1 ;
-(id)_addAdditionalUsageReportingDataTo:(id)arg1 ;
-(NSMutableArray *)learnedIRConfigurations;
-(PBSIRVolumeButtonConfiguration *)selectedVolumeButtonConfiguration;
-(BOOL)_SYNC_SelectIRVolumeButtonConfiguration:(id)arg1 ;
-(void)setLastProgrammedRemoteIDStr:(NSString *)arg1 ;
-(void)_SYNC_cacheVolumeButtonChords;
-(CoreControlHeldChord *)shortVolumeUpHeldChord;
-(CoreControlHeldChord *)shortVolumeDownHeldChord;
-(id)_SYNC_effectiveIRVolumeButtonConfiguration;
-(int)_coreControlPolicyForFeature:(id)arg1 ;
-(NSUUID *)lastProgrammedVolumeConfiguration;
-(NSString *)lastProgrammedRemoteIDStr;
-(int)lastProgrammedVolumePolicy;
-(void)setLastProgrammedVolumeConfiguration:(NSUUID *)arg1 ;
-(void)setLastProgrammedVolumePolicy:(int)arg1 ;
-(void)_saveLastProgrammedVolumeAndMuteData;
-(void)setLastVolumeButtonsEnabledState:(long long)arg1 ;
-(void)_SYNC_setVolumeIRCommandsAllowed:(BOOL)arg1 ;
-(NSTimer *)rapidDelegateVolumeButtonReleaseTimer;
-(NSTimer *)rapidCECVolumeButtonReleaseTimer;
-(void)_clearDelegateVolumeRepeatTimer;
-(long long)internalVolumeButtonBehavior;
-(id)_stringFromVolumeButtonBehavior:(long long)arg1 ;
-(void)setInternalVolumeButtonBehavior:(long long)arg1 ;
-(void)_clearVolumeButtonChordCache;
-(void)_SYNC_updateFeatures;
-(void)setDeviceTypeBeingLearned:(int)arg1 ;
-(int)deviceTypeBeingLearned;
-(id)_SYNC_setDefaultNameForDeviceWithUUID:(id)arg1 type:(int)arg2 ;
-(void)_rememberLearnedIRConfigurationWithUUID:(id)arg1 ;
-(void)_willStartLearningAction:(int)arg1 ;
-(id)_SYNC_availableExternalIRDeviceUUIDsForDeviceType:(int)arg1 ;
-(id)_SYNC_nameForExternalIRDeviceWithUUID:(id)arg1 ;
-(BOOL)_SYNC_setName:(id)arg1 forExternalIRDeviceWithUUID:(id)arg2 error:(id*)arg3 ;
-(void)_forgetLearnedIRConfigurationWithUUID:(id)arg1 ;
-(long long)pendingVolumeUpReleaseEvents;
-(long long)pendingVolumeDownReleaseEvents;
-(void)_sendCECVolumeAction:(long long)arg1 ;
-(void)_didChangeTopology;
-(void)_didChangeLinkStatus:(BOOL)arg1 ;
-(void)_didReceiveDeviceEvent:(long long)arg1 ;
-(void)_didChangeReadyStatusTo:(BOOL)arg1 ;
-(void)_didReceiveRequest:(long long)arg1 ;
-(void)_didBecomeActiveSource;
-(void)_didResignActiveSource;
-(long long)_remoteButtonForCommand:(unsigned long long)arg1 ;
-(void)_didHandleRemoteControlButtonPressed:(long long)arg1 ;
-(void)_didHandleRemoteControlButtonReleased:(long long)arg1 ;
-(void)_didCompleteAction:(int)arg1 withResult:(BOOL)arg2 error:(id)arg3 ;
-(void)_didUpdatePolicy;
-(void)_didLearnActionWithProgress:(double)arg1 ;
-(void)_didCompleteLearningActionWithResult:(BOOL)arg1 error:(id)arg2 ;
-(void)_didFinishLearningAction;
-(void)_setInitialPolicies;
-(void)sendAction:(long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)setIsActiveSource:(BOOL)arg1 ;
-(void)setActionBeingLearned:(int)arg1 ;
-(int)actionBeingLearned;
-(void)setCoreControl:(CoreControl *)arg1 ;
-(void)_SYNC_updateFeature:(id)arg1 ;
-(NSString *)volumeDeviceName;
-(void)setVolumeDeviceName:(NSString *)arg1 ;
-(void)setIsAppleIRRemotePaired:(BOOL)arg1 ;
-(PBSIRVolumeButtonConfiguration *)effectiveVolumeButtonConfiguration;
-(void)setEffectiveVolumeButtonConfiguration:(PBSIRVolumeButtonConfiguration *)arg1 ;
-(void)setSelectedVolumeButtonConfiguration:(PBSIRVolumeButtonConfiguration *)arg1 ;
-(void)setLearnedIRConfigurations:(NSMutableArray *)arg1 ;
-(int)lastProgrammedMutePolicy;
-(void)setLastProgrammedMutePolicy:(int)arg1 ;
-(NSUUID *)lastProgrammedMuteConfiguration;
-(void)setLastProgrammedMuteConfiguration:(NSUUID *)arg1 ;
-(long long)lastVolumeButtonsEnabledState;
-(void)_clearRapidDelegateVolumeButtonReleaseTimer;
-(void)_increaseRouteVolume;
-(void)_startRapidDelegateVolumeButtonReleaseTimerForAction:(long long)arg1 ;
-(void)_startDelegateVolumeRepeatTimerForAction:(long long)arg1 ;
-(NSTimer *)delegateVolumeRepeatTimer;
-(void)_decreaseRouteVolume;
-(void)_clearRapidCECVolumeButtonReleaseTimer;
-(BOOL)_shouldForwardVolumeActions;
-(void)setPendingVolumeUpReleaseEvents:(long long)arg1 ;
-(void)_startRapidCECVolumeButtonReleaseTimerForAction:(long long)arg1 ;
-(void)setPendingVolumeDownReleaseEvents:(long long)arg1 ;
-(void)_rapidDelegateVolumeButtonReleaseTimerFired:(id)arg1 ;
-(void)setRapidDelegateVolumeButtonReleaseTimer:(NSTimer *)arg1 ;
-(void)_delegateVolumeRepeatTimerFired:(id)arg1 ;
-(void)setDelegateVolumeRepeatTimer:(NSTimer *)arg1 ;
-(void)_rapidCECVolumeButtonReleaseTimerFired:(id)arg1 ;
-(void)setRapidCECVolumeButtonReleaseTimer:(NSTimer *)arg1 ;
-(void)setShortVolumeUpHeldChord:(CoreControlHeldChord *)arg1 ;
-(void)setShortVolumeDownHeldChord:(CoreControlHeldChord *)arg1 ;
-(id)_SYNC_defaultNameForDeviceType:(int)arg1 ;
-(int)_coreControlActionForFeature:(id)arg1 ;
-(id)_stringFromCoreControlPolicy:(int)arg1 ;
-(id)_stringFromCoreControlPolicyState:(int)arg1 ;
-(void)coreControl:(id)arg1 handleEvent:(int)arg2 info:(id)arg3 userData:(void*)arg4 ;
-(BOOL)isAppleIRRemotePaired;
-(void)togglePolicyForFeature:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)gatherUsageReportingDataWithCompletion:(/*^block*/id)arg1 ;
-(void)getIRVolumeButtonConfigurationsWithCompletion:(/*^block*/id)arg1 ;
-(void)selectIRVolumeButtonConfiguration:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)programAppleRemoteWithCurrentIRVolumeButtonConfigurationWithCompletion:(/*^block*/id)arg1 ;
-(void)cancelPendingVolumeActions;
-(void)setVolumeButtonBehavior:(long long)arg1 ;
-(void)pairAppleIRRemoteWithCompletion:(/*^block*/id)arg1 ;
-(void)unpairAppleIRRemoteWithCompletion:(/*^block*/id)arg1 ;
-(void)getAvailableIRLearningConfigurationsWithCompletion:(/*^block*/id)arg1 ;
-(void)getNameForExternalIRDeviceWithUUID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)setName:(id)arg1 forExternalIRDeviceWithUUID:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)removeIRDeviceWithUUID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(BOOL)needToUpdateCachedState;
-(void)setNeedToUpdateCachedState:(BOOL)arg1 ;
-(id)domainObserver;
-(void)setDomainObserver:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)coreControlQueue;
-(void)setCoreControlQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)serialActionQueue;
-(void)setSerialActionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(unsigned)noIdleAssertionID;
-(void)setNoIdleAssertionID:(unsigned)arg1 ;
-(long long)noIdleAssertionRefCount;
-(void)setNoIdleAssertionRefCount:(long long)arg1 ;
-(id)coreControlPrefsObserver;
-(void)setCoreControlPrefsObserver:(id)arg1 ;
-(void)setQueuedActions:(NSMutableArray *)arg1 ;
-(id)init;
-(void)dealloc;
-(NSString *)debugDescription;
-(void)setDelegate:(id<PBSExternalControlSystemDelegate>)arg1 ;
-(id<PBSExternalControlSystemDelegate>)delegate;
@end

