/*
* This header is generated by classdump-dyld 1.0
* on Saturday, August 24, 2019 at 9:45:55 PM Mountain Standard Time
* Operating System: Version 12.4 (Build 16M568)
* Image Source: /System/Library/PrivateFrameworks/ITMLKit.framework/ITMLKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ITMLKit/IKJSDataObservable.h>
#import <libobjc.A.dylib/NSObject.h>
#import <libobjc.A.dylib/IKJSDataItem.h>
@class NSString;


@protocol IKJSDataItem <JSExport>
@property (nonatomic,readonly) NSString * type; 
@property (nonatomic,readonly) NSString * identifier; 
@required
-(void)touchPropertyPath:(id)arg1;
-(id)initConstructor:(id)arg1 :(id)arg2;
-(void)setPropertyPath:(id)arg1 :(id)arg2;
-(id)getPropertyPath:(id)arg1;
-(NSString *)identifier;
-(NSString *)type;

@end

#import <libobjc.A.dylib/_IKJSDataItemProxy.h>

@class NSString, NSDictionary;

@interface IKJSDataItem : IKJSDataObservable <NSObject, IKJSDataItem, _IKJSDataItemProxy> {

	NSString* _type;
	NSString* _identifier;
	BOOL _hole;

}

@property (nonatomic,readonly) NSDictionary * dataDictionary; 
@property (nonatomic,retain) NSString * identifier;                        //@synthesize identifier=_identifier - In the implementation block
@property (getter=isHole,nonatomic,readonly) BOOL hole;                    //@synthesize hole=_hole - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * type; 
+(id)makeHoleDataItem;
-(BOOL)isHole;
-(id)valueForPropertyPath:(id)arg1 boxed:(BOOL)arg2 ;
-(id)initWithValue:(id)arg1 internal:(BOOL)arg2 ;
-(void)touchPropertyPath:(id)arg1 ;
-(void)resetValueForPropertyPath:(id)arg1 ;
-(id)initConstructor:(id)arg1 :(id)arg2 ;
-(void)setPropertyPath:(id)arg1 :(id)arg2 ;
-(id)getPropertyPath:(id)arg1 ;
-(void)setValue:(id)arg1 forPropertyPath:(id)arg2 ;
-(id)asPrivateIKJSDataItem;
-(id)initWithType:(id)arg1 identifier:(id)arg2 ;
-(id)init;
-(NSString *)identifier;
-(NSString *)type;
-(void)setIdentifier:(NSString *)arg1 ;
-(id)initWithType:(id)arg1 ;
-(NSDictionary *)dataDictionary;
@end

