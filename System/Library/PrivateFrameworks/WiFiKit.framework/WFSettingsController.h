/*
* This header is generated by classdump-dyld 1.0
* on Saturday, August 24, 2019 at 9:48:27 PM Mountain Standard Time
* Operating System: Version 12.4 (Build 16M568)
* Image Source: /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/WFNetworkSettingsViewControllerDataCoordinator.h>

@class WFNetworkSettingsViewController, WFMutableNetworkProfile, WFNetworkSettingsConfig, WFIPMonitor, NSOperationQueue, WFDetailsContext, WFNetworkScanRecord, NSString;

@interface WFSettingsController : NSObject <WFNetworkSettingsViewControllerDataCoordinator> {

	BOOL _monitorIPChanges;
	BOOL _cloudSyncRunning;
	BOOL _currentNetwork;
	WFNetworkSettingsViewController* _settingsViewController;
	WFMutableNetworkProfile* _profile;
	WFNetworkSettingsConfig* _config;
	WFIPMonitor* _ipMonitor;
	NSOperationQueue* _queue;
	WFDetailsContext* _detailsContext;
	WFNetworkScanRecord* _network;

}

@property (nonatomic,retain) WFMutableNetworkProfile * profile;                                     //@synthesize profile=_profile - In the implementation block
@property (nonatomic,retain) WFNetworkSettingsConfig * config;                                      //@synthesize config=_config - In the implementation block
@property (nonatomic,retain) WFNetworkSettingsViewController * settingsViewController;              //@synthesize settingsViewController=_settingsViewController - In the implementation block
@property (assign,nonatomic) BOOL monitorIPChanges;                                                 //@synthesize monitorIPChanges=_monitorIPChanges - In the implementation block
@property (nonatomic,retain) WFIPMonitor * ipMonitor;                                               //@synthesize ipMonitor=_ipMonitor - In the implementation block
@property (nonatomic,retain) NSOperationQueue * queue;                                              //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) BOOL cloudSyncRunning;                                                 //@synthesize cloudSyncRunning=_cloudSyncRunning - In the implementation block
@property (nonatomic,retain) WFDetailsContext * detailsContext;                                     //@synthesize detailsContext=_detailsContext - In the implementation block
@property (nonatomic,retain) WFNetworkScanRecord * network;                                         //@synthesize network=_network - In the implementation block
@property (assign,getter=isCurrentNetwork,nonatomic) BOOL currentNetwork;                           //@synthesize currentNetwork=_currentNetwork - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setQueue:(NSOperationQueue *)arg1 ;
-(void)setProfile:(WFMutableNetworkProfile *)arg1 ;
-(WFNetworkScanRecord *)network;
-(void)setNetwork:(WFNetworkScanRecord *)arg1 ;
-(WFNetworkSettingsViewController *)settingsViewController;
-(BOOL)isCurrentNetwork;
-(void)_ipStateDidChange:(id)arg1 ;
-(WFIPMonitor *)ipMonitor;
-(void)setDetailsContext:(WFDetailsContext *)arg1 ;
-(WFDetailsContext *)detailsContext;
-(void)setIpMonitor:(WFIPMonitor *)arg1 ;
-(id)initWithDetailsContext:(id)arg1 ;
-(id)_baseConfigForNetwork:(id)arg1 current:(BOOL)arg2 ;
-(void)_refreshSettingsConfig:(id)arg1 ;
-(void)_currentNetworkDidChange:(id)arg1 ;
-(void)_startMontoringIPChanges;
-(void)_stopMonitoringIPChanges;
-(id)_profileForNetwork:(id)arg1 ;
-(BOOL)cloudSyncRunning;
-(void)networkSettingsViewController:(id)arg1 saveConfig:(id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)setSettingsViewController:(WFNetworkSettingsViewController *)arg1 ;
-(BOOL)monitorIPChanges;
-(void)setMonitorIPChanges:(BOOL)arg1 ;
-(void)setCloudSyncRunning:(BOOL)arg1 ;
-(WFMutableNetworkProfile *)profile;
-(void)setCurrentNetwork:(BOOL)arg1 ;
-(void)dealloc;
-(NSOperationQueue *)queue;
-(WFNetworkSettingsConfig *)config;
-(void)setConfig:(WFNetworkSettingsConfig *)arg1 ;
@end

